{"clone_type": "T2", "method1_id": 6719723, "method2_id": 6719725, "code1": "public void testVowelsInner () {\n    Pattern p = null;\n    Matcher m = null;\n    p = Pattern.compile (\"H[a-z&&[aeiou]]llo\", Pattern.CASE_INSENSITIVE);\n    m = p.matcher (\"My name is berlin hallo what is up\");\n    boolean _found = false;\n    while (m.find ()) {\n        System.out.println (\" : Vowel-Search \\\"\" + m.group () + \"\\\" start :  \" + m.start () + \" end : \" + m.end () + \".\");\n        _found = true;\n    }\n    assertTrue (_found);\n}\n", "code2": "public void testEnd () {\n    Pattern p = null;\n    Matcher m = null;\n    p = Pattern.compile (\"spiritbot\\\\W\", Pattern.CASE_INSENSITIVE);\n    m = p.matcher (\"spiritbot: how are you doing\");\n    boolean _found = false;\n    while (m.find ()) {\n        System.out.println (\" : Text \\\"\" + m.group () + \"\\\" start :  \" + m.start () + \" end : \" + m.end () + \".\");\n        _found = true;\n    }\n    assertTrue (_found);\n}\n"}
{"clone_type": "T2", "method1_id": 948486, "method2_id": 1458629, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 6061403, "method2_id": 21488868, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2532322, "method2_id": 11319479, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 7464991, "method2_id": 7464994, "code1": "public void criarQuestaoDiscursiva (QuestaoDiscursiva q) throws SQLException {\n    PreparedStatement stmt = null;\n    String sql = \"INSERT INTO discursiva (id_questao,gabarito) VALUES (?,?)\";\n    try {\n        stmt = conexao.prepareStatement (sql);\n        stmt.setInt (1, q.getIdQuestao ());\n        stmt.setString (2, q.getGabarito ());\n        stmt.executeUpdate ();\n        conexao.commit ();\n    } catch (SQLException e) {\n        conexao.rollback ();\n        throw e;\n    }\n}\n", "code2": "public void alterarQuestaoDiscursiva (QuestaoDiscursiva q) throws SQLException {\n    PreparedStatement stmt = null;\n    String sql = \"UPDATE discursiva SET  gabarito=? WHERE id_questao=?\";\n    try {\n        stmt = conexao.prepareStatement (sql);\n        stmt.setString (1, q.getGabarito ());\n        stmt.setInt (2, q.getIdQuestao ());\n        stmt.executeUpdate ();\n        conexao.commit ();\n    } catch (SQLException e) {\n        conexao.rollback ();\n        throw e;\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 3286240, "method2_id": 17815062, "code1": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n", "code2": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"UTF-8\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n"}
{"clone_type": "T2", "method1_id": 9415194, "method2_id": 10793696, "code1": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n", "code2": "public static String SHA1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n"}
{"clone_type": "T2", "method1_id": 250595, "method2_id": 16351776, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 6061402, "method2_id": 13028547, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 15571541, "method2_id": 16388708, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 4471001, "method2_id": 16351775, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1966263, "method2_id": 9088422, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 411630, "method2_id": 6814855, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 250596, "method2_id": 7760800, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8625347, "method2_id": 13783898, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8778962, "method2_id": 19142736, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 411631, "method2_id": 12614305, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 367771, "method2_id": 21870536, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 14317425, "method2_id": 15571542, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 15894276, "method2_id": 21827619, "code1": "public static String md5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"utf-8\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n", "code2": "public static String SHA1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n"}
{"clone_type": "T2", "method1_id": 2711644, "method2_id": 22993368, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1421558, "method2_id": 12172484, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 222634, "method2_id": 222636, "code1": "private void SaveASGraph () {\n    JFileChooser chooser = new JFileChooser (DirG);\n    chooser.setFileSelectionMode (JFileChooser.FILES_ONLY);\n    ExtensionFileFilter filter = new ExtensionFileFilter (\"grf\", \"GRAPH representation files (*.grf)\");\n    chooser.setFileFilter (filter);\n    if (chooser.showSaveDialog (this) != JFileChooser.APPROVE_OPTION) return;\n\n    DirG = chooser.getSelectedFile ().getParent ();\n    PathG = chooser.getSelectedFile ().getPath ();\n    TabG = chooser.getSelectedFile ().getName ();\n    if (! PathG.endsWith (\".grf\")) {\n        PathG = PathG + \".grf\";\n        TabG = TabG + \".grf\";\n    }\n    SaveGraph ();\n}\n", "code2": "private void SaveASSchedule () {\n    JFileChooser chooser = new JFileChooser (DirS);\n    chooser.setFileSelectionMode (JFileChooser.FILES_ONLY);\n    ExtensionFileFilter filter = new ExtensionFileFilter (\"sch\", \"Schedule graph representation files (*.sch)\");\n    chooser.setFileFilter (filter);\n    if (chooser.showSaveDialog (this) != JFileChooser.APPROVE_OPTION) return;\n\n    DirS = chooser.getSelectedFile ().getParent ();\n    PathS = chooser.getSelectedFile ().getPath ();\n    TabS = chooser.getSelectedFile ().getName ();\n    if (! PathS.endsWith (\".sch\")) {\n        PathS = PathS + \".sch\";\n        TabS = TabS + \".sch\";\n    }\n    SaveSchedule ();\n}\n"}
{"clone_type": "T2", "method1_id": 6659731, "method2_id": 17856104, "code1": "public static String hashStringMD5 (String string) throws NoSuchAlgorithmException {\n    MessageDigest md = MessageDigest.getInstance (\"MD5\");\n    md.update (string.getBytes ());\n    byte byteData [] = md.digest ();\n    StringBuffer sb = new StringBuffer ();\n    for (int i = 0;\n    i < byteData.length; i ++) {\n        sb.append (Integer.toString ((byteData [i] & 0xff) + 0x100, 16).substring (1));\n    }\n    StringBuffer hexString = new StringBuffer ();\n    for (int i = 0;\n    i < byteData.length; i ++) {\n        String hex = Integer.toHexString (0xff & byteData [i]);\n        if (hex.length () == 1) hexString.append ('0');\n\n        hexString.append (hex);\n    }\n    return hexString.toString ();\n}\n", "code2": "public static String SHA1 (String text) throws NoSuchAlgorithmException {\n    MessageDigest md = MessageDigest.getInstance (\"SHA-1\");\n    md.update (text.getBytes ());\n    byte byteData [] = md.digest ();\n    StringBuilder sb = new StringBuilder ();\n    for (int i = 0;\n    i < byteData.length; i ++) {\n        sb.append (Integer.toString ((byteData [i] & 0xff) + 0x100, 16).substring (1));\n    }\n    StringBuilder hexString = new StringBuilder ();\n    for (int i = 0;\n    i < byteData.length; i ++) {\n        String hex = Integer.toHexString (0xff & byteData [i]);\n        if (hex.length () == 1) hexString.append ('0');\n\n        hexString.append (hex);\n    }\n    return hexString.toString ();\n}\n"}
{"clone_type": "T2", "method1_id": 8793825, "method2_id": 12614306, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2711645, "method2_id": 18731109, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 16540473, "method2_id": 22271237, "code1": "public static void copyFile (File sourceFile, File destFile) throws IOException {\n    if (! destFile.exists ()) {\n        destFile.createNewFile ();\n    }\n    FileChannel source = null;\n    FileChannel destination = null;\n    try {\n        source = new FileInputStream (sourceFile).getChannel ();\n        destination = new FileOutputStream (destFile).getChannel ();\n        destination.transferFrom (source, 0, source.size ());\n    } finally {\n        if (source != null) {\n            source.close ();\n        }\n        if (destination != null) {\n            destination.close ();\n        }\n    }\n}\n", "code2": "public static void copy (File sourceFile, File destFile) throws IOException {\n    if (! destFile.exists ()) {\n        destFile.createNewFile ();\n    }\n    FileChannel source = null;\n    FileChannel destination = null;\n    try {\n        source = new FileInputStream (sourceFile).getChannel ();\n        destination = new FileOutputStream (destFile).getChannel ();\n        destination.transferFrom (source, 0, source.size ());\n    } finally {\n        if (source != null) {\n            source.close ();\n        }\n        if (destination != null) {\n            destination.close ();\n        }\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 21407, "method2_id": 144389, "code1": "private void loadTaskList () {\n    try {\n        DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance ();\n        DocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder ();\n        Document doc = docBuilder.parse (new File (this.getProperty (\"path.data\") + File.separator + \"Tasks.xml\"));\n        NodeList tasksNodes = doc.getElementsByTagName (\"task\");\n        tasks = new HashMap < String, TaskCommand > ();\n        for (int x = 0;\n        x < tasksNodes.getLength (); x ++) {\n            Node item = tasksNodes.item (x);\n            TaskCommand taskCommand = new TaskCommand (item);\n            tasks.put (taskCommand.getName (), taskCommand);\n        }\n        System.out.println (\"Tasks.xml found and loaded (\" + tasksNodes.getLength () + \")\");\n    } catch (Exception e) {\n        tasks = new HashMap < String, TaskCommand > ();\n        System.out.println (\"Error loading Tasks.xml, starting with no tasks.\");\n    }\n}\n", "code2": "private void loadChannels () {\n    try {\n        DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance ();\n        DocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder ();\n        Document doc = docBuilder.parse (new File (this.getProperty (\"path.data\") + File.separator + \"Channels.xml\"));\n        NodeList items = doc.getElementsByTagName (\"channel\");\n        channels = new HashMap < String, Channel > ();\n        for (int x = 0;\n        x < items.getLength (); x ++) {\n            Node item = items.item (x);\n            Channel chan = new Channel (item);\n            channels.put (chan.getName (), chan);\n        }\n        System.out.println (\"Channels.xml found and loaded (\" + items.getLength () + \")\");\n    } catch (Exception e) {\n        channels = new HashMap < String, Channel > ();\n        System.out.println (\"Error loading Channels.xml, starting with blank channel list.\");\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 250595, "method2_id": 4471001, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 6814854, "method2_id": 11548511, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 367770, "method2_id": 1966263, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8778961, "method2_id": 21870537, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 3325456, "method2_id": 18748516, "code1": "public static void copy (String a, String b) throws IOException {\n    File inputFile = new File (a);\n    File outputFile = new File (b);\n    FileReader in = new FileReader (inputFile);\n    FileWriter out = new FileWriter (outputFile);\n    int c;\n    while ((c = in.read ()) != - 1) out.write (c);\n\n    in.close ();\n    out.close ();\n}\n", "code2": "public static void copy (String fromFile, String toFile) throws IOException {\n    File inputFile = new File (fromFile);\n    File outputFile = new File (toFile);\n    FileReader in = new FileReader (inputFile);\n    FileWriter out = new FileWriter (outputFile);\n    int c;\n    while ((c = in.read ()) != - 1) out.write (c);\n\n    in.close ();\n    out.close ();\n}\n"}
{"clone_type": "T2", "method1_id": 4623013, "method2_id": 12172484, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 16193685, "method2_id": 16193686, "code1": "public void actionPerformed (final ActionEvent e) {\n    if (Desktop.isDesktopSupported () && Desktop.getDesktop ().isSupported (Desktop.Action.BROWSE)) {\n        try {\n            java.awt.Desktop.getDesktop ().open (new File (\"resources/hilfe/index.html\"));\n        } catch (final IOException ex) {\n            System.err.println (\"Die Hilfeseite von BAUS! konnte nicht gefunden werden\");\n        }\n    }\n}\n", "code2": "public void actionPerformed (final ActionEvent e) {\n    if (Desktop.isDesktopSupported () && Desktop.getDesktop ().isSupported (Desktop.Action.OPEN)) {\n        try {\n            java.awt.Desktop.getDesktop ().open (new File (\"auftraege/test.pdf\"));\n        } catch (final IOException ex) {\n            System.err.println (\"Der Auftrag konnte nicht angezeigt werden.\");\n        }\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 2711645, "method2_id": 16224017, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 12606395, "method2_id": 14785308, "code1": "public static String SHA1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n", "code2": "public static String sha1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n"}
{"clone_type": "T2", "method1_id": 13569337, "method2_id": 18820148, "code1": "public static String getMD5HashFromString (String message) {\n    String hashword = null;\n    try {\n        MessageDigest md5 = MessageDigest.getInstance (\"MD5\");\n        md5.update (message.getBytes ());\n        BigInteger hash = new BigInteger (1, md5.digest ());\n        hashword = hash.toString (16);\n    } catch (NoSuchAlgorithmException nsae) {\n    }\n    return hashword;\n}\n", "code2": "public static String MD5ToString (String md5) {\n    String hashword = null;\n    try {\n        MessageDigest md = MessageDigest.getInstance (\"MD5\");\n        md.update (md5.getBytes ());\n        BigInteger hash = new BigInteger (1, md.digest ());\n        hashword = hash.toString (16);\n    } catch (NoSuchAlgorithmException nsae) {\n    }\n    return hashword;\n}\n"}
{"clone_type": "T2", "method1_id": 12614306, "method2_id": 14183083, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 3768628, "method2_id": 14183084, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 13028547, "method2_id": 14183083, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1966263, "method2_id": 6814854, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2461169, "method2_id": 17456565, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 12670642, "method2_id": 20103762, "code1": "public boolean backupLastAuditSchema (File lastAuditSchema) {\n    boolean isBkupFileOK = false;\n    String writeTimestamp = DateFormatUtils.format (new java.util.Date (), configFile.getTimestampPattern ());\n    File target = new File (configFile.getAuditSchemaFileDir () + File.separator + configFile.getAuditSchemaFileName () + \".bkup_\" + writeTimestamp);\n    FileChannel sourceChannel = null;\n    FileChannel targetChannel = null;\n    try {\n        sourceChannel = new FileInputStream (lastAuditSchema).getChannel ();\n        targetChannel = new FileOutputStream (target).getChannel ();\n        targetChannel.transferFrom (sourceChannel, 0, sourceChannel.size ());\n    } catch (IOException e) {\n        logger.log (Level.SEVERE, \"IO exception occurred while copying file\", e);\n    } finally {\n        if ((target != null) && (target.exists ()) && (target.length () > 0)) {\n            isBkupFileOK = true;\n        }\n        try {\n            if (sourceChannel != null) {\n                sourceChannel.close ();\n            }\n            if (targetChannel != null) {\n                targetChannel.close ();\n            }\n        } catch (IOException e) {\n            logger.warning (\"closing channels failed\");\n        }\n    }\n    return isBkupFileOK;\n}\n", "code2": "public boolean backupLastAuditSchema (File lastAuditSchema) {\n    boolean isBkupFileOK = false;\n    String writeTimestamp = DateFormatUtils.format (new java.util.Date (), configFile.getTimestampPattern ());\n    File target = new File (configFile.getAuditSchemaFileDir () + File.separator + configFile.getAuditSchemaFileName () + \".bkup_\" + writeTimestamp);\n    FileChannel sourceChannel = null;\n    FileChannel targetChannel = null;\n    try {\n        sourceChannel = new FileInputStream (lastAuditSchema).getChannel ();\n        targetChannel = new FileOutputStream (target).getChannel ();\n        targetChannel.transferFrom (sourceChannel, 0, sourceChannel.size ());\n    } catch (IOException e) {\n        logger.log (Level.SEVERE, \"IO exception occurred while copying file\", e);\n    } finally {\n        if ((target != null) && (target.exists ()) && (target.length () > 0)) {\n            isBkupFileOK = true;\n        }\n        try {\n            if (sourceChannel != null) {\n                sourceChannel.close ();\n            }\n            if (targetChannel != null) {\n                targetChannel.close ();\n            }\n        } catch (IOException e) {\n            logger.info (\"closing channels failed\");\n        }\n    }\n    return isBkupFileOK;\n}\n"}
{"clone_type": "T2", "method1_id": 831650, "method2_id": 7760800, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 22899260, "method2_id": 22899270, "code1": "public static String sha1Hash (String input) {\n    try {\n        MessageDigest sha1Digest = MessageDigest.getInstance (\"SHA-1\");\n        sha1Digest.update (input.getBytes ());\n        return byteArrayToString (sha1Digest.digest ());\n    } catch (Exception e) {\n        logger.error (e.getMessage (), e);\n    }\n    return \"\";\n}\n", "code2": "public static String md5hash (String input) {\n    try {\n        MessageDigest sha1Digest = MessageDigest.getInstance (\"MD5\");\n        sha1Digest.update (input.getBytes ());\n        return byteArrayToString (sha1Digest.digest ());\n    } catch (Exception e) {\n        logger.error (e.getMessage (), e);\n    }\n    return \"\";\n}\n"}
{"clone_type": "T2", "method1_id": 8625346, "method2_id": 22993368, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2532322, "method2_id": 22993367, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 16209101, "method2_id": 22262998, "code1": "public static String SHA1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n", "code2": "public static String SHA512 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-512\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"UTF-8\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n"}
{"clone_type": "T2", "method1_id": 1421557, "method2_id": 6814855, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 3608108, "method2_id": 17420328, "code1": "public static String SHA512 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-512\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"UTF-8\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n", "code2": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n"}
{"clone_type": "T2", "method1_id": 8778962, "method2_id": 21870536, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 250596, "method2_id": 1458628, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 3286240, "method2_id": 22262998, "code1": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n", "code2": "public static String SHA512 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-512\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"UTF-8\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n"}
{"clone_type": "T2", "method1_id": 1896089, "method2_id": 21247844, "code1": "public static void copyFileByNIO (File in, File out) throws IOException {\n    FileChannel sourceChannel = new FileInputStream (in).getChannel ();\n    FileChannel destinationChannel = new FileOutputStream (out).getChannel ();\n    sourceChannel.transferTo (0, sourceChannel.size (), destinationChannel);\n    sourceChannel.close ();\n    destinationChannel.close ();\n}\n", "code2": "public static void kopirujSoubor (File vstup, File vystup) throws IOException {\n    FileChannel sourceChannel = new FileInputStream (vstup).getChannel ();\n    FileChannel destinationChannel = new FileOutputStream (vystup).getChannel ();\n    sourceChannel.transferTo (0, sourceChannel.size (), destinationChannel);\n    sourceChannel.close ();\n    destinationChannel.close ();\n}\n"}
{"clone_type": "T2", "method1_id": 4623013, "method2_id": 13783898, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8625346, "method2_id": 11319480, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 14785308, "method2_id": 22262998, "code1": "public static String sha1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n", "code2": "public static String SHA512 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-512\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"UTF-8\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n"}
{"clone_type": "T2", "method1_id": 10251387, "method2_id": 23099329, "code1": "@Override\npublic void close () throws IOException {\n    super.close ();\n    byte [] signatureData = toByteArray ();\n    ZipOutputStream zipOutputStream = new ZipOutputStream (this.targetOutputStream);\n    ZipInputStream zipInputStream = new ZipInputStream (new FileInputStream (this.originalZipFile));\n    ZipEntry zipEntry;\n    while (null != (zipEntry = zipInputStream.getNextEntry ())) {\n        if (! zipEntry.getName ().equals (ODFUtil.SIGNATURE_FILE)) {\n            ZipEntry newZipEntry = new ZipEntry (zipEntry.getName ());\n            zipOutputStream.putNextEntry (newZipEntry);\n            LOG.debug (\"copying \" + zipEntry.getName ());\n            IOUtils.copy (zipInputStream, zipOutputStream);\n        }\n    }\n    zipInputStream.close ();\n    zipEntry = new ZipEntry (ODFUtil.SIGNATURE_FILE);\n    LOG.debug (\"writing \" + zipEntry.getName ());\n    zipOutputStream.putNextEntry (zipEntry);\n    IOUtils.write (signatureData, zipOutputStream);\n    zipOutputStream.close ();\n}\n", "code2": "@Override\npublic void close () throws IOException {\n    super.close ();\n    byte [] signatureData = toByteArray ();\n    ZipOutputStream zipOutputStream = new ZipOutputStream (this.targetOutputStream);\n    ZipInputStream zipInputStream = new ZipInputStream (new FileInputStream (this.originalZipFile));\n    ZipEntry zipEntry;\n    while (null != (zipEntry = zipInputStream.getNextEntry ())) {\n        if (! zipEntry.getName ().equals (ASiCUtil.SIGNATURE_FILE)) {\n            ZipEntry newZipEntry = new ZipEntry (zipEntry.getName ());\n            zipOutputStream.putNextEntry (newZipEntry);\n            LOG.debug (\"copying \" + zipEntry.getName ());\n            IOUtils.copy (zipInputStream, zipOutputStream);\n        }\n    }\n    zipInputStream.close ();\n    zipEntry = new ZipEntry (ASiCUtil.SIGNATURE_FILE);\n    LOG.debug (\"writing \" + zipEntry.getName ());\n    zipOutputStream.putNextEntry (zipEntry);\n    IOUtils.write (signatureData, zipOutputStream);\n    zipOutputStream.close ();\n}\n"}
{"clone_type": "T2", "method1_id": 6508481, "method2_id": 12820117, "code1": "static void invalidSlave (String msg, Socket sock) throws IOException {\n    BufferedReader _sinp = null;\n    PrintWriter _sout = null;\n    try {\n        _sout = new PrintWriter (sock.getOutputStream (), true);\n        _sinp = new BufferedReader (new InputStreamReader (sock.getInputStream ()));\n        _sout.println (msg);\n        logger.info (\"NEW< \" + msg);\n        String txt = AsyncSlaveListener.readLine (_sinp, 30);\n        String sname = \"\";\n        String spass = \"\";\n        String shash = \"\";\n        try {\n            String [] items = txt.split (\" \");\n            sname = items [1].trim ();\n            spass = items [2].trim ();\n            shash = items [3].trim ();\n        } catch (Exception e) {\n            throw new IOException (\"Slave Inititalization Faailed\");\n        }\n        String pass = sname + spass + _pass;\n        MessageDigest md5 = MessageDigest.getInstance (\"MD5\");\n        md5.reset ();\n        md5.update (pass.getBytes ());\n        String hash = AsyncSlaveListener.hash2hex (md5.digest ()).toLowerCase ();\n        if (! hash.equals (shash)) {\n            throw new IOException (\"Slave Inititalization Faailed\");\n        }\n    } catch (Exception e) {\n    }\n    throw new IOException (\"Slave Inititalization Faailed\");\n}\n", "code2": "static void invalidSlave (String msg, Socket sock) throws IOException {\n    BufferedReader _sinp = null;\n    PrintWriter _sout = null;\n    try {\n        _sout = new PrintWriter (sock.getOutputStream (), true);\n        _sinp = new BufferedReader (new InputStreamReader (sock.getInputStream ()));\n        _sout.println (msg);\n        logger.info (\"NEW< \" + msg);\n        String txt = SocketSlaveListener.readLine (_sinp, 30);\n        String sname = \"\";\n        String spass = \"\";\n        String shash = \"\";\n        try {\n            String [] items = txt.split (\" \");\n            sname = items [1].trim ();\n            spass = items [2].trim ();\n            shash = items [3].trim ();\n        } catch (Exception e) {\n            throw new IOException (\"Slave Inititalization Faailed\");\n        }\n        String pass = sname + spass + _pass;\n        MessageDigest md5 = MessageDigest.getInstance (\"MD5\");\n        md5.reset ();\n        md5.update (pass.getBytes ());\n        String hash = SocketSlaveListener.hash2hex (md5.digest ()).toLowerCase ();\n        if (! hash.equals (shash)) {\n            throw new IOException (\"Slave Inititalization Faailed\");\n        }\n    } catch (Exception e) {\n    }\n    throw new IOException (\"Slave Inititalization Faailed\");\n}\n"}
{"clone_type": "T2", "method1_id": 7760800, "method2_id": 16351776, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 250596, "method2_id": 16388707, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1176194, "method2_id": 2233543, "code1": "private boolean deleteLocalDirectory (File path) {\n    if (path.exists ()) {\n        File [] files = path.listFiles ();\n        for (int i = 0;\n        i < files.length; i ++) {\n            if (files [i].isDirectory ()) {\n                deleteLocalDirectory (files [i]);\n            } else {\n                files [i].delete ();\n            }\n        }\n    }\n    return (path.delete ());\n}\n", "code2": "private boolean destroyWorkDirectory (File path) {\n    if (path.exists ()) {\n        File [] files = path.listFiles ();\n        for (int i = 0;\n        i < files.length; i ++) {\n            if (files [i].isDirectory ()) {\n                destroyWorkDirectory (files [i]);\n            } else {\n                files [i].delete ();\n            }\n        }\n    }\n    return (path.delete ());\n}\n"}
{"clone_type": "T2", "method1_id": 745854, "method2_id": 22126763, "code1": "public static byte [] generateHash (String ValueToHash, String Algo) throws NoSuchAlgorithmException {\n    MessageDigest Hash = MessageDigest.getInstance (Algo);\n    Hash.update (ValueToHash.getBytes ());\n    return Hash.digest ();\n}\n", "code2": "public static byte [] getMessageDigest (String message, String algorithm) throws NoSuchAlgorithmException {\n    MessageDigest alg = MessageDigest.getInstance (algorithm);\n    alg.update (message.getBytes ());\n    return alg.digest ();\n}\n"}
{"clone_type": "T2", "method1_id": 19142736, "method2_id": 21488869, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 16209101, "method2_id": 17808515, "code1": "public static String SHA1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n", "code2": "public static String getHashCode (String text) throws UnsupportedEncodingException, NoSuchAlgorithmException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"UTF-8\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n"}
{"clone_type": "T2", "method1_id": 948487, "method2_id": 15571541, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8793825, "method2_id": 11319480, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 13783899, "method2_id": 17456565, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 948487, "method2_id": 13783898, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 23677197, "method2_id": 23677198, "code1": "public static File [] chooseFileOpenMultiple (JFrame frame) {\n    File retval [];\n    JFileChooser fc = new JFileChooser ();\n    fc.setDialogTitle (\"Select input file.\");\n    fc.setFileSelectionMode (JFileChooser.FILES_ONLY);\n    fc.setMultiSelectionEnabled (true);\n    int status = fc.showSaveDialog (frame);\n    if (status == JFileChooser.APPROVE_OPTION) {\n        retval = fc.getSelectedFiles ();\n    } else if (status == JFileChooser.CANCEL_OPTION) {\n        retval = null;\n    } else {\n        retval = null;\n    }\n\n    fc.setEnabled (false);\n    fc.setVisible (false);\n    return retval;\n}\n", "code2": "public static File [] chooseFileDirectory (JFrame frame) {\n    File retval [];\n    JFileChooser fc = new JFileChooser ();\n    fc.setDialogTitle (\"Select input file.\");\n    fc.setFileSelectionMode (JFileChooser.DIRECTORIES_ONLY);\n    fc.setMultiSelectionEnabled (false);\n    int status = fc.showSaveDialog (frame);\n    if (status == JFileChooser.APPROVE_OPTION) {\n        retval = fc.getSelectedFiles ();\n    } else if (status == JFileChooser.CANCEL_OPTION) {\n        retval = null;\n    } else {\n        retval = null;\n    }\n\n    fc.setEnabled (false);\n    fc.setVisible (false);\n    return retval;\n}\n"}
{"clone_type": "T2", "method1_id": 831649, "method2_id": 22246375, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 11548511, "method2_id": 17456565, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1966263, "method2_id": 13902980, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 4938100, "method2_id": 20603864, "code1": "public static String sha1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n", "code2": "public static String SHA1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n"}
{"clone_type": "T2", "method1_id": 11548510, "method2_id": 19142737, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8625346, "method2_id": 9693857, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 4518933, "method2_id": 16466520, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 7132185, "method2_id": 16224018, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2711645, "method2_id": 22993367, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 948486, "method2_id": 12678589, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 12678588, "method2_id": 21870537, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 154175, "method2_id": 216273, "code1": "public void actionPerformed (ActionEvent e) {\n    dirChooser.setFileSelectionMode (JFileChooser.FILES_AND_DIRECTORIES);\n    int i = dirChooser.showOpenDialog (gimme ());\n    if (i == JFileChooser.APPROVE_OPTION) {\n        webBrowserField.setText (dirChooser.getSelectedFile ().toString ());\n    }\n}\n", "code2": "public void actionPerformed (ActionEvent e) {\n    dirChooser.setFileSelectionMode (JFileChooser.FILES_AND_DIRECTORIES);\n    int i = dirChooser.showOpenDialog (gimme ());\n    if (i == JFileChooser.APPROVE_OPTION) {\n        fileBrowserField.setText (dirChooser.getSelectedFile ().toString ());\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 8793826, "method2_id": 11548510, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 19912847, "method2_id": 19912848, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8612648, "method2_id": 8793825, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2711644, "method2_id": 13783899, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 831650, "method2_id": 4471000, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1458629, "method2_id": 13783898, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 18269745, "method2_id": 21870536, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 4518934, "method2_id": 8793825, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 9415194, "method2_id": 15894276, "code1": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n", "code2": "public static String md5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"utf-8\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n"}
{"clone_type": "T2", "method1_id": 10350952, "method2_id": 19782619, "code1": "public synchronized String encrypt (String plaintext) throws Exception {\n    MessageDigest md = null;\n    try {\n        md = MessageDigest.getInstance (\"SHA\");\n    } catch (NoSuchAlgorithmException e) {\n        throw new Exception (e.getMessage ());\n    }\n    try {\n        md.update (plaintext.getBytes (\"UTF-8\"));\n    } catch (UnsupportedEncodingException e) {\n        throw new Exception (e.getMessage ());\n    }\n    byte raw [] = md.digest ();\n    String hash = (new BASE64Encoder ()).encode (raw);\n    return hash;\n}\n", "code2": "public synchronized String encrypt (String p_plainText) throws ServiceUnavailableException {\n    MessageDigest md = null;\n    try {\n        md = MessageDigest.getInstance (\"SHA\");\n    } catch (NoSuchAlgorithmException e) {\n        throw new ServiceUnavailableException (e.getMessage ());\n    }\n    try {\n        md.update (p_plainText.getBytes (\"UTF-8\"));\n    } catch (UnsupportedEncodingException e) {\n        throw new ServiceUnavailableException (e.getMessage ());\n    }\n    byte raw [] = md.digest ();\n    String hash = (new BASE64Encoder ()).encode (raw);\n    return hash;\n}\n"}
{"clone_type": "T2", "method1_id": 11548510, "method2_id": 18623183, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 19142736, "method2_id": 21870537, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 10287987, "method2_id": 19584877, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8778961, "method2_id": 18731110, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 831650, "method2_id": 8612647, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 97592, "method2_id": 154177, "code1": "public void actionPerformed (ActionEvent e) {\n    dirChooser.setFileSelectionMode (JFileChooser.FILES_AND_DIRECTORIES);\n    int i = dirChooser.showOpenDialog (gimme ());\n    if (i == JFileChooser.APPROVE_OPTION) {\n        webBrowserField.setText (dirChooser.getSelectedFile ().toString ());\n    }\n}\n", "code2": "public void actionPerformed (ActionEvent e) {\n    dirChooser.setFileSelectionMode (JFileChooser.FILES_AND_DIRECTORIES);\n    int i = dirChooser.showOpenDialog (gimme ());\n    if (i == JFileChooser.APPROVE_OPTION) {\n        ripperPathField.setText (dirChooser.getSelectedFile ().toString ());\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 6719723, "method2_id": 6719724, "code1": "public void testVowelsInner () {\n    Pattern p = null;\n    Matcher m = null;\n    p = Pattern.compile (\"H[a-z&&[aeiou]]llo\", Pattern.CASE_INSENSITIVE);\n    m = p.matcher (\"My name is berlin hallo what is up\");\n    boolean _found = false;\n    while (m.find ()) {\n        System.out.println (\" : Vowel-Search \\\"\" + m.group () + \"\\\" start :  \" + m.start () + \" end : \" + m.end () + \".\");\n        _found = true;\n    }\n    assertTrue (_found);\n}\n", "code2": "public void testVowels () {\n    Pattern p = null;\n    Matcher m = null;\n    p = Pattern.compile (\"[a-z&&[aeiou]]\", Pattern.CASE_INSENSITIVE);\n    m = p.matcher (\"BerlinBrown\");\n    boolean _found = false;\n    while (m.find ()) {\n        System.out.println (\" : Vowel-Search \\\"\" + m.group () + \"\\\" start :  \" + m.start () + \" end : \" + m.end () + \".\");\n        _found = true;\n    }\n    assertTrue (_found);\n}\n"}
{"clone_type": "T2", "method1_id": 3768629, "method2_id": 19584877, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 948487, "method2_id": 7760800, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 3368163, "method2_id": 3980938, "code1": "private byte [] getClassData (File f) {\n    try {\n        FileInputStream stream = new FileInputStream (f);\n        ByteArrayOutputStream out = new ByteArrayOutputStream (1000);\n        byte [] b = new byte [1000];\n        int n;\n        while ((n = stream.read (b)) != - 1) out.write (b, 0, n);\n\n        stream.close ();\n        out.close ();\n        return out.toByteArray ();\n    } catch (IOException e) {\n    }\n    return null;\n}\n", "code2": "private byte [] getClassData (File file) {\n    try {\n        FileInputStream stream = new FileInputStream (file);\n        ByteArrayOutputStream out = new ByteArrayOutputStream (1000);\n        byte [] b = new byte [1000];\n        int n;\n        while ((n = stream.read (b)) != - 1) out.write (b, 0, n);\n\n        stream.close ();\n        out.close ();\n        return out.toByteArray ();\n    } catch (IOException e) {\n    }\n    return null;\n}\n"}
{"clone_type": "T2", "method1_id": 6244936, "method2_id": 22246375, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 14317426, "method2_id": 16466519, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 411630, "method2_id": 12172485, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2461168, "method2_id": 7760801, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1458629, "method2_id": 19584877, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 266990, "method2_id": 21177597, "code1": "public static void copyFile (File sourceFile, File destFile) throws IOException {\n    if (! destFile.exists ()) {\n        destFile.createNewFile ();\n    }\n    FileChannel source = null;\n    FileChannel destination = null;\n    try {\n        source = new FileInputStream (sourceFile).getChannel ();\n        destination = new FileOutputStream (destFile).getChannel ();\n        destination.transferFrom (source, 0, source.size ());\n    } finally {\n        if (source != null) {\n            source.close ();\n        }\n        if (destination != null) {\n            destination.close ();\n        }\n    }\n}\n", "code2": "public static void copyFile (File sourceFile, File destinationFile) throws IOException {\n    if (! destinationFile.exists ()) {\n        destinationFile.createNewFile ();\n    }\n    FileChannel source = null;\n    FileChannel destination = null;\n    try {\n        source = new FileInputStream (sourceFile).getChannel ();\n        destination = new FileOutputStream (destinationFile).getChannel ();\n        destination.transferFrom (source, 0, source.size ());\n    } finally {\n        if (source != null) {\n            source.close ();\n        }\n        if (destination != null) {\n            destination.close ();\n        }\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 14183083, "method2_id": 14183084, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 17456565, "method2_id": 18269745, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1458628, "method2_id": 17456566, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1966263, "method2_id": 18623182, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 154175, "method2_id": 216275, "code1": "public void actionPerformed (ActionEvent e) {\n    dirChooser.setFileSelectionMode (JFileChooser.FILES_AND_DIRECTORIES);\n    int i = dirChooser.showOpenDialog (gimme ());\n    if (i == JFileChooser.APPROVE_OPTION) {\n        webBrowserField.setText (dirChooser.getSelectedFile ().toString ());\n    }\n}\n", "code2": "public void actionPerformed (ActionEvent e) {\n    dirChooser.setFileSelectionMode (JFileChooser.FILES_AND_DIRECTORIES);\n    int i = dirChooser.showOpenDialog (gimme ());\n    if (i == JFileChooser.APPROVE_OPTION) {\n        shoutcastPlayer.setText (dirChooser.getSelectedFile ().toString ());\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 12678589, "method2_id": 19142736, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1424647, "method2_id": 11993046, "code1": "public static void copy (File source, File dest) throws IOException {\n    FileChannel in = null, out = null;\n    try {\n        in = new FileInputStream (source).getChannel ();\n        out = new FileOutputStream (dest).getChannel ();\n        long size = in.size ();\n        MappedByteBuffer buf = in.map (FileChannel.MapMode.READ_ONLY, 0, size);\n        out.write (buf);\n    } finally {\n        if (in != null) in.close ();\n\n        if (out != null) out.close ();\n\n    }\n}\n", "code2": "public static void copyFile (File source, File dest) throws IOException {\n    FileChannel in = null, out = null;\n    try {\n        in = new FileInputStream (source).getChannel ();\n        out = new FileOutputStream (dest).getChannel ();\n        long size = in.size ();\n        MappedByteBuffer buf = in.map (FileChannel.MapMode.READ_ONLY, 0, size);\n        out.write (buf);\n    } finally {\n        if (in != null) in.close ();\n\n        if (out != null) out.close ();\n\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 948487, "method2_id": 9088422, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8793826, "method2_id": 18269744, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1552000, "method2_id": 3538574, "code1": "private boolean deleteDirectory (File path) {\n    if (path.exists ()) {\n        File [] files = path.listFiles ();\n        for (int i = 0;\n        i < files.length; i ++) {\n            if (files [i].isDirectory ()) {\n                deleteDirectory (files [i]);\n            } else {\n                files [i].delete ();\n            }\n        }\n    }\n    return (path.delete ());\n}\n", "code2": "private boolean deleteDirectory (File file) {\n    if (file.exists ()) {\n        File [] files = file.listFiles ();\n        for (int i = 0;\n        i < files.length; i ++) {\n            if (files [i].isDirectory ()) {\n                deleteDirectory (files [i]);\n            } else {\n                files [i].delete ();\n            }\n        }\n    }\n    return (file.delete ());\n}\n"}
{"clone_type": "T2", "method1_id": 10240262, "method2_id": 10240264, "code1": "public void google_search (String input) throws URISyntaxException {\n    try {\n        Desktop desktop = null;\n        if (Desktop.isDesktopSupported ()) {\n            desktop = Desktop.getDesktop ();\n        }\n        URI uri;\n        uri = new URI (\"http://www.google.gr/search?hl=el&q=\" + input.replace (' ', '+') + \"&btnG=%CE%91%CE%BD%CE%B1%CE%B6%CE%AE%CF%84%CE%B7%CF%83%CE%B7&meta=\");\n        desktop.browse (uri);\n    } catch (IOException ioe) {\n        ioe.printStackTrace ();\n    }\n}\n", "code2": "public void youtube_search (String input) throws URISyntaxException {\n    try {\n        Desktop desktop = null;\n        if (Desktop.isDesktopSupported ()) {\n            desktop = Desktop.getDesktop ();\n        }\n        URI uri;\n        uri = new URI (\"http://www.youtube.com/results?search_query=\" + input.replace (' ', '+') + \"&search_type=&aq=f\");\n        desktop.browse (uri);\n    } catch (IOException ioe) {\n        ioe.printStackTrace ();\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 2473125, "method2_id": 9589432, "code1": "private void saveProject () {\n    JFileChooser fc = new JFileChooser ();\n    int returnVal = fc.showSaveDialog (this);\n    String path = \"c:\\\\\";\n    String fileName = \"TestSave\";\n    if (returnVal == JFileChooser.APPROVE_OPTION) {\n        path = fc.getSelectedFile ().getParent () + \"\\\\\";\n        fileName = fc.getSelectedFile ().getName ();\n    } else {\n        return;\n    }\n    ImageManip.save (path + fileName + \"-Map.jpg\", colorizer.getColorMap ());\n    ImageManip.save (path + fileName + \"-Marked.jpg\", colorizer.getMarked ());\n    ImageManip.save (path + fileName + \"-original.jpg\", colorizer.getOriginal ());\n    byte [] buffer = new byte [18024];\n    try {\n        ZipOutputStream out = new ZipOutputStream (new FileOutputStream (path + fileName + \".zip\"));\n        out.setLevel (Deflater.DEFAULT_COMPRESSION);\n        FileInputStream in1 = new FileInputStream (path + fileName + \"-Map.jpg\");\n        FileInputStream in2 = new FileInputStream (path + fileName + \"-Marked.jpg\");\n        FileInputStream in3 = new FileInputStream (path + fileName + \"-original.jpg\");\n        out.putNextEntry (new ZipEntry (fileName + \"-Map.jpg\"));\n        int len;\n        while ((len = in1.read (buffer)) > 0) {\n            out.write (buffer, 0, len);\n        }\n        out.putNextEntry (new ZipEntry (fileName + \"-Marked.jpg\"));\n        len = 0;\n        while ((len = in2.read (buffer)) > 0) {\n            out.write (buffer, 0, len);\n        }\n        out.putNextEntry (new ZipEntry (fileName + \"-original.jpg\"));\n        len = 0;\n        while ((len = in3.read (buffer)) > 0) {\n            out.write (buffer, 0, len);\n        }\n        out.close ();\n        in1.close ();\n        in2.close ();\n        in3.close ();\n        File originalFile = new File (path + fileName + \"-original.jpg\");\n        File mapFile = new File (path + fileName + \"-Map.jpg\");\n        File markedFile = new File (path + fileName + \"-Marked.jpg\");\n        originalFile.delete ();\n        mapFile.delete ();\n        markedFile.delete ();\n    } catch (IllegalArgumentException iae) {\n        iae.printStackTrace ();\n    } catch (FileNotFoundException fnfe) {\n        fnfe.printStackTrace ();\n    } catch (IOException ioe) {\n        ioe.printStackTrace ();\n    }\n}\n", "code2": "private void saveProject () {\n    JFileChooser fc = new JFileChooser ();\n    int returnVal = fc.showSaveDialog (this);\n    String path = \"c:\\\\\";\n    String fileName = \"TestSave\";\n    if (returnVal == JFileChooser.APPROVE_OPTION) {\n        path = fc.getSelectedFile ().getParent () + \"\\\\\";\n        fileName = fc.getSelectedFile ().getName ();\n    } else {\n        return;\n    }\n    ImageManip.save (path + fileName + \"-Map.jpg\", colorizationPanel.getColorMap ());\n    ImageManip.save (path + fileName + \"-Marked.jpg\", colorizationPanel.getMarked ());\n    ImageManip.save (path + fileName + \"-original.jpg\", colorizationPanel.getOriginal ());\n    byte [] buffer = new byte [18024];\n    try {\n        ZipOutputStream out = new ZipOutputStream (new FileOutputStream (path + fileName + \".zip\"));\n        out.setLevel (Deflater.DEFAULT_COMPRESSION);\n        FileInputStream in1 = new FileInputStream (path + fileName + \"-Map.jpg\");\n        FileInputStream in2 = new FileInputStream (path + fileName + \"-Marked.jpg\");\n        FileInputStream in3 = new FileInputStream (path + fileName + \"-original.jpg\");\n        out.putNextEntry (new ZipEntry (fileName + \"-Map.jpg\"));\n        int len;\n        while ((len = in1.read (buffer)) > 0) {\n            out.write (buffer, 0, len);\n        }\n        out.putNextEntry (new ZipEntry (fileName + \"-Marked.jpg\"));\n        len = 0;\n        while ((len = in2.read (buffer)) > 0) {\n            out.write (buffer, 0, len);\n        }\n        out.putNextEntry (new ZipEntry (fileName + \"-original.jpg\"));\n        len = 0;\n        while ((len = in3.read (buffer)) > 0) {\n            out.write (buffer, 0, len);\n        }\n        out.close ();\n        in1.close ();\n        in2.close ();\n        in3.close ();\n        File originalFile = new File (path + fileName + \"-original.jpg\");\n        File mapFile = new File (path + fileName + \"-Map.jpg\");\n        File markedFile = new File (path + fileName + \"-Marked.jpg\");\n        originalFile.delete ();\n        mapFile.delete ();\n        markedFile.delete ();\n    } catch (IllegalArgumentException iae) {\n        iae.printStackTrace ();\n    } catch (FileNotFoundException fnfe) {\n        fnfe.printStackTrace ();\n    } catch (IOException ioe) {\n        ioe.printStackTrace ();\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 10115630, "method2_id": 19984810, "code1": "public static boolean copyDataToNewTable (EboContext p_eboctx, String srcTableName, String destTableName, String where, boolean log, int mode) throws boRuntimeException {\n    srcTableName = srcTableName.toUpperCase ();\n    destTableName = destTableName.toUpperCase ();\n    Connection cn = null;\n    Connection cndef = null;\n    boolean ret = false;\n    try {\n        boolean srcexists = false;\n        boolean destexists = false;\n        final InitialContext ic = new InitialContext ();\n        cn = p_eboctx.getConnectionData ();\n        cndef = p_eboctx.getConnectionDef ();\n        PreparedStatement pstm = cn.prepareStatement (\"SELECT TABLE_NAME FROM USER_TABLES WHERE TABLE_NAME=?\");\n        pstm.setString (1, srcTableName);\n        ResultSet rslt = pstm.executeQuery ();\n        if (rslt.next ()) {\n            srcexists = true;\n        }\n        rslt.close ();\n        pstm.setString (1, destTableName);\n        rslt = pstm.executeQuery ();\n        if (rslt.next ()) {\n            destexists = true;\n        }\n        if (! destexists) {\n            rslt.close ();\n            pstm.close ();\n            pstm = cn.prepareStatement (\"SELECT VIEW_NAME FROM USER_VIEWS WHERE VIEW_NAME=?\");\n            pstm.setString (1, destTableName);\n            rslt = pstm.executeQuery ();\n            if (rslt.next ()) {\n                CallableStatement cstm = cn.prepareCall (\"DROP VIEW \" + destTableName);\n                cstm.execute ();\n                cstm.close ();\n            }\n        }\n        rslt.close ();\n        pstm.close ();\n        if (srcexists && ! destexists) {\n            if (log) {\n                logger.finest (LoggerMessageLocalizer.getMessage (\"CREATING_AND_COPY_DATA_FROM\") + \" [\" + srcTableName + \"] \" + LoggerMessageLocalizer.getMessage (\"TO\") + \" [\" + destTableName + \"]\");\n            }\n            CallableStatement cstm = cn.prepareCall (\"CREATE TABLE \" + destTableName + \" AS SELECT * FROM \" + srcTableName + \" \" + (((where != null) && (where.length () > 0)) ? (\" WHERE \" + where) : \"\"));\n            cstm.execute ();\n            cstm.close ();\n            if (log) {\n                logger.finest (LoggerMessageLocalizer.getMessage (\"UPDATING_NGTDIC\"));\n            }\n            cn.commit ();\n            ret = true;\n        } else if (srcexists && destexists) {\n            if (log) {\n                logger.finest (LoggerMessageLocalizer.getMessage (\"COPY_DATA_FROM\") + \" [\" + srcTableName + \"] \" + LoggerMessageLocalizer.getMessage (\"TO\") + \"  [\" + destTableName + \"]\");\n            }\n            PreparedStatement pstm2 = cn.prepareStatement (\"SELECT COLUMN_NAME FROM USER_TAB_COLUMNS WHERE TABLE_NAME = ? \");\n            pstm2.setString (1, destTableName);\n            ResultSet rslt2 = pstm2.executeQuery ();\n            StringBuffer fields = new StringBuffer ();\n            PreparedStatement pstm3 = cn.prepareStatement (\"SELECT COLUMN_NAME FROM USER_TAB_COLUMNS WHERE TABLE_NAME = ? and COLUMN_NAME=?\");\n            while (rslt2.next ()) {\n                pstm3.setString (1, srcTableName);\n                pstm3.setString (2, rslt2.getString (1));\n                ResultSet rslt3 = pstm3.executeQuery ();\n                if (rslt3.next ()) {\n                    if (fields.length () > 0) {\n                        fields.append (',');\n                    }\n                    fields.append ('\"').append (rslt2.getString (1)).append ('\"');\n                }\n                rslt3.close ();\n            }\n            pstm3.close ();\n            rslt2.close ();\n            pstm2.close ();\n            CallableStatement cstm;\n            int recs = 0;\n            if ((mode == 0) || (mode == 1)) {\n                cstm = cn.prepareCall (\"INSERT INTO \" + destTableName + \"( \" + fields.toString () + \" ) ( SELECT \" + fields.toString () + \" FROM \" + srcTableName + \" \" + (((where != null) && (where.length () > 0)) ? (\" WHERE \" + where) : \"\") + \")\");\n                recs = cstm.executeUpdate ();\n                cstm.close ();\n                if (log) {\n                    logger.finest (LoggerMessageLocalizer.getMessage (\"DONE\") + \" [\" + recs + \"] \" + LoggerMessageLocalizer.getMessage (\"RECORDS_COPIED\"));\n                }\n            }\n            cn.commit ();\n            ret = true;\n        }\n\n    } catch (Exception e) {\n        try {\n            cn.rollback ();\n        } catch (Exception z) {\n            throw new boRuntimeException (\"boBuildDB.moveTable\", \"BO-1304\", z);\n        }\n        throw new boRuntimeException (\"boBuildDB.moveTable\", \"BO-1304\", e);\n    } finally {\n        try {\n            cn.close ();\n        } catch (Exception e) {\n        }\n        try {\n            cndef.close ();\n        } catch (Exception e) {\n        }\n    }\n    return ret;\n}\n", "code2": "public static boolean copyDataToNewTable (EboContext p_eboctx, String srcTableName, String destTableName, String where, boolean log, int mode) throws boRuntimeException {\n    srcTableName = srcTableName.toUpperCase ();\n    destTableName = destTableName.toUpperCase ();\n    Connection cn = null;\n    Connection cndef = null;\n    boolean ret = false;\n    try {\n        boolean srcexists = false;\n        boolean destexists = false;\n        final InitialContext ic = new InitialContext ();\n        cn = p_eboctx.getConnectionData ();\n        cndef = p_eboctx.getConnectionDef ();\n        PreparedStatement pstm = cn.prepareStatement (\"SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE upper(TABLE_NAME)=?  AND TABLE_SCHEMA=database()\");\n        pstm.setString (1, srcTableName);\n        ResultSet rslt = pstm.executeQuery ();\n        if (rslt.next ()) {\n            srcexists = true;\n        }\n        rslt.close ();\n        pstm.setString (1, destTableName);\n        rslt = pstm.executeQuery ();\n        if (rslt.next ()) {\n            destexists = true;\n        }\n        if (! destexists) {\n            rslt.close ();\n            pstm.close ();\n            pstm = cn.prepareStatement (\"SELECT TABLE_NAME FROM INFORMATION_SCHEMA.VIEWS WHERE upper(TABLE_NAME)=? AND TABLE_SCHEMA=database()\");\n            pstm.setString (1, destTableName);\n            rslt = pstm.executeQuery ();\n            if (rslt.next ()) {\n                CallableStatement cstm = cn.prepareCall (\"DROP VIEW \" + destTableName);\n                cstm.execute ();\n                cstm.close ();\n            }\n        }\n        rslt.close ();\n        pstm.close ();\n        if (srcexists && ! destexists) {\n            if (log) {\n                logger.finest (LoggerMessageLocalizer.getMessage (\"CREATING_AND_COPY_DATA_FROM\") + \" [\" + srcTableName + \"] \" + LoggerMessageLocalizer.getMessage (\"TO\") + \" [\" + destTableName + \"]\");\n            }\n            CallableStatement cstm = cn.prepareCall (\"CREATE TABLE \" + destTableName + \" AS SELECT * FROM \" + srcTableName + \" \" + (((where != null) && (where.length () > 0)) ? (\" WHERE \" + where) : \"\"));\n            cstm.execute ();\n            cstm.close ();\n            if (log) {\n                logger.finest (LoggerMessageLocalizer.getMessage (\"UPDATING_NGTDIC\"));\n            }\n            cn.commit ();\n            ret = true;\n        } else if (srcexists && destexists) {\n            if (log) {\n                logger.finest (LoggerMessageLocalizer.getMessage (\"COPY_DATA_FROM\") + \" [\" + srcTableName + \"] \" + LoggerMessageLocalizer.getMessage (\"TO\") + \" [\" + destTableName + \"]\");\n            }\n            PreparedStatement pstm2 = cn.prepareStatement (\"SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE upper(TABLE_NAME) = ? AND TABLE_SCHEMA=database()\");\n            pstm2.setString (1, destTableName);\n            ResultSet rslt2 = pstm2.executeQuery ();\n            StringBuffer fields = new StringBuffer ();\n            PreparedStatement pstm3 = cn.prepareStatement (\"SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE upper(TABLE_NAME) = ? and upper(COLUMN_NAME)=? AND TABLE_SCHEMA=database()\");\n            while (rslt2.next ()) {\n                pstm3.setString (1, srcTableName);\n                pstm3.setString (2, rslt2.getString (1));\n                ResultSet rslt3 = pstm3.executeQuery ();\n                if (rslt3.next ()) {\n                    if (fields.length () > 0) {\n                        fields.append (',');\n                    }\n                    fields.append ('\"').append (rslt2.getString (1)).append ('\"');\n                }\n                rslt3.close ();\n            }\n            pstm3.close ();\n            rslt2.close ();\n            pstm2.close ();\n            CallableStatement cstm;\n            int recs = 0;\n            if ((mode == 0) || (mode == 1)) {\n                cstm = cn.prepareCall (\"INSERT INTO \" + destTableName + \"( \" + fields.toString () + \" ) ( SELECT \" + fields.toString () + \" FROM \" + srcTableName + \" \" + (((where != null) && (where.length () > 0)) ? (\" WHERE \" + where) : \"\") + \")\");\n                recs = cstm.executeUpdate ();\n                cstm.close ();\n                if (log) {\n                    logger.finest (LoggerMessageLocalizer.getMessage (\"DONE\") + \" [\" + recs + \"] \" + LoggerMessageLocalizer.getMessage (\"RECORDS_COPIED\"));\n                }\n            }\n            cn.commit ();\n            ret = true;\n        }\n\n    } catch (Exception e) {\n        try {\n            cn.rollback ();\n        } catch (Exception z) {\n            throw new boRuntimeException (\"boBuildDB.moveTable\", \"BO-1304\", z);\n        }\n        throw new boRuntimeException (\"boBuildDB.moveTable\", \"BO-1304\", e);\n    } finally {\n        try {\n            cn.close ();\n        } catch (Exception e) {\n        }\n        try {\n            cndef.close ();\n        } catch (Exception e) {\n        }\n    }\n    return ret;\n}\n"}
{"clone_type": "T2", "method1_id": 14129929, "method2_id": 19685311, "code1": "public static void copy (String sourceFile, String targetFile) throws IOException {\n    FileChannel sourceChannel = new FileInputStream (sourceFile).getChannel ();\n    FileChannel targetChannel = new FileOutputStream (targetFile).getChannel ();\n    targetChannel.transferFrom (sourceChannel, 0, sourceChannel.size ());\n    sourceChannel.close ();\n    targetChannel.close ();\n}\n", "code2": "public static void copyFile (File inputFile, File outputFile) throws IOException {\n    FileChannel srcChannel = new FileInputStream (inputFile).getChannel ();\n    FileChannel dstChannel = new FileOutputStream (outputFile).getChannel ();\n    dstChannel.transferFrom (srcChannel, 0, srcChannel.size ());\n    srcChannel.close ();\n    dstChannel.close ();\n}\n"}
{"clone_type": "T2", "method1_id": 411631, "method2_id": 13028546, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1142010, "method2_id": 1205414, "code1": "private static boolean loadClasses () {\n    switch (jvm) {\n        case MRJ_2_0 :\n            try {\n                Class aeTargetClass = Class.forName (\"com.apple.MacOS.AETarget\");\n                Class osUtilsClass = Class.forName (\"com.apple.MacOS.OSUtils\");\n                Class appleEventClass = Class.forName (\"com.apple.MacOS.AppleEvent\");\n                Class aeClass = Class.forName (\"com.apple.MacOS.ae\");\n                aeDescClass = Class.forName (\"com.apple.MacOS.AEDesc\");\n                aeTargetConstructor = aeTargetClass.getDeclaredConstructor (new Class [] {int.class});\n                appleEventConstructor = appleEventClass.getDeclaredConstructor (new Class [] {int.class, int.class, aeTargetClass, int.class, int.class});\n                aeDescConstructor = aeDescClass.getDeclaredConstructor (new Class [] {String.class});\n                makeOSType = osUtilsClass.getDeclaredMethod (\"makeOSType\", new Class [] {String.class});\n                putParameter = appleEventClass.getDeclaredMethod (\"putParameter\", new Class [] {int.class, aeDescClass});\n                sendNoReply = appleEventClass.getDeclaredMethod (\"sendNoReply\", new Class [] {});\n                Field keyDirectObjectField = aeClass.getDeclaredField (\"keyDirectObject\");\n                keyDirectObject = (Integer) keyDirectObjectField.get (null);\n                Field autoGenerateReturnIDField = appleEventClass.getDeclaredField (\"kAutoGenerateReturnID\");\n                kAutoGenerateReturnID = (Integer) autoGenerateReturnIDField.get (null);\n                Field anyTransactionIDField = appleEventClass.getDeclaredField (\"kAnyTransactionID\");\n                kAnyTransactionID = (Integer) anyTransactionIDField.get (null);\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (NoSuchFieldException nsfe) {\n                errorMessage = nsfe.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_2_1 :\n            try {\n                mrjFileUtilsClass = Class.forName (\"com.apple.mrj.MRJFileUtils\");\n                mrjOSTypeClass = Class.forName (\"com.apple.mrj.MRJOSType\");\n                Field systemFolderField = mrjFileUtilsClass.getDeclaredField (\"kSystemFolderType\");\n                kSystemFolderType = systemFolderField.get (null);\n                findFolder = mrjFileUtilsClass.getDeclaredMethod (\"findFolder\", new Class [] {mrjOSTypeClass});\n                getFileCreator = mrjFileUtilsClass.getDeclaredMethod (\"getFileCreator\", new Class [] {File.class});\n                getFileType = mrjFileUtilsClass.getDeclaredMethod (\"getFileType\", new Class [] {File.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchFieldException nsfe) {\n                errorMessage = nsfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (SecurityException se) {\n                errorMessage = se.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_3_0 :\n            try {\n                Class linker = Class.forName (\"com.apple.mrj.jdirect.Linker\");\n                Constructor constructor = linker.getConstructor (new Class [] {Class.class});\n                linkage = constructor.newInstance (new Object [] {BrowserLauncher.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (InvocationTargetException ite) {\n                errorMessage = ite.getMessage ();\n                return false;\n            } catch (InstantiationException ie) {\n                errorMessage = ie.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_3_1 :\n            try {\n                mrjFileUtilsClass = Class.forName (\"com.apple.mrj.MRJFileUtils\");\n                openURLm = mrjFileUtilsClass.getDeclaredMethod (\"openURL\", new Class [] {String.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            }\n            break;\n        default :\n            break;\n    }\n    return true;\n}\n", "code2": "private static boolean loadClasses () {\n    switch (jvm) {\n        case MRJ_2_0 :\n            try {\n                Class aeTargetClass = Class.forName (\"com.apple.MacOS.AETarget\");\n                Class osUtilsClass = Class.forName (\"com.apple.MacOS.OSUtils\");\n                Class appleEventClass = Class.forName (\"com.apple.MacOS.AppleEvent\");\n                Class aeClass = Class.forName (\"com.apple.MacOS.ae\");\n                aeDescClass = Class.forName (\"com.apple.MacOS.AEDesc\");\n                aeTargetConstructor = aeTargetClass.getDeclaredConstructor (new Class [] {int.class});\n                appleEventConstructor = appleEventClass.getDeclaredConstructor (new Class [] {int.class, int.class, aeTargetClass, int.class, int.class});\n                aeDescConstructor = aeDescClass.getDeclaredConstructor (new Class [] {String.class});\n                makeOSType = osUtilsClass.getDeclaredMethod (\"makeOSType\", new Class [] {String.class});\n                putParameter = appleEventClass.getDeclaredMethod (\"putParameter\", new Class [] {int.class, aeDescClass});\n                sendNoReply = appleEventClass.getDeclaredMethod (\"sendNoReply\", new Class [] {});\n                Field keyDirectObjectField = aeClass.getDeclaredField (\"keyDirectObject\");\n                keyDirectObject = (Integer) keyDirectObjectField.get (null);\n                Field autoGenerateReturnIDField = appleEventClass.getDeclaredField (\"kAutoGenerateReturnID\");\n                kAutoGenerateReturnID = (Integer) autoGenerateReturnIDField.get (null);\n                Field anyTransactionIDField = appleEventClass.getDeclaredField (\"kAnyTransactionID\");\n                kAnyTransactionID = (Integer) anyTransactionIDField.get (null);\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (NoSuchFieldException nsfe) {\n                errorMessage = nsfe.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_2_1 :\n            try {\n                mrjFileUtilsClass = Class.forName (\"com.apple.mrj.MRJFileUtils\");\n                mrjOSTypeClass = Class.forName (\"com.apple.mrj.MRJOSType\");\n                Field systemFolderField = mrjFileUtilsClass.getDeclaredField (\"kSystemFolderType\");\n                kSystemFolderType = systemFolderField.get (null);\n                findFolder = mrjFileUtilsClass.getDeclaredMethod (\"findFolder\", new Class [] {mrjOSTypeClass});\n                getFileCreator = mrjFileUtilsClass.getDeclaredMethod (\"getFileCreator\", new Class [] {File.class});\n                getFileType = mrjFileUtilsClass.getDeclaredMethod (\"getFileType\", new Class [] {File.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchFieldException nsfe) {\n                errorMessage = nsfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (SecurityException se) {\n                errorMessage = se.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_3_0 :\n            try {\n                Class linker = Class.forName (\"com.apple.mrj.jdirect.Linker\");\n                Constructor constructor = linker.getConstructor (new Class [] {Class.class});\n                linkage = constructor.newInstance (new Object [] {BrowserLauncher.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (InvocationTargetException ite) {\n                errorMessage = ite.getMessage ();\n                return false;\n            } catch (InstantiationException ie) {\n                errorMessage = ie.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_3_1 :\n            try {\n                mrjFileUtilsClass = Class.forName (\"com.apple.mrj.MRJFileUtils\");\n                openURL = mrjFileUtilsClass.getDeclaredMethod (\"openURL\", new Class [] {String.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            }\n            break;\n        default :\n            break;\n    }\n    return true;\n}\n"}
{"clone_type": "T2", "method1_id": 16209101, "method2_id": 18773058, "code1": "public static String SHA1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n", "code2": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n"}
{"clone_type": "T2", "method1_id": 13902981, "method2_id": 18623182, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 97594, "method2_id": 154178, "code1": "public void actionPerformed (ActionEvent e) {\n    dirChooser.setFileSelectionMode (JFileChooser.FILES_AND_DIRECTORIES);\n    int i = dirChooser.showOpenDialog (gimme ());\n    if (i == JFileChooser.APPROVE_OPTION) {\n        ripperPathField.setText (dirChooser.getSelectedFile ().toString ());\n    }\n}\n", "code2": "public void actionPerformed (ActionEvent e) {\n    dirChooser.setFileSelectionMode (JFileChooser.FILES_AND_DIRECTORIES);\n    int i = dirChooser.showOpenDialog (gimme ());\n    if (i == JFileChooser.APPROVE_OPTION) {\n        shoutcastPlayer.setText (dirChooser.getSelectedFile ().toString ());\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 5399593, "method2_id": 22899738, "code1": "public synchronized String encrypt (String plaintext) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md = null;\n    md = MessageDigest.getInstance (\"SHA\");\n    md.update (plaintext.getBytes (\"UTF-8\"));\n    byte raw [] = md.digest ();\n    String hash = (new BASE64Encoder ()).encode (raw);\n    return hash;\n}\n", "code2": "public synchronized String encrypt (String password) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md = null;\n    md = MessageDigest.getInstance (\"SHA-256\");\n    md.update (password.getBytes (\"UTF-8\"));\n    byte raw [] = md.digest ();\n    String hash = (new BASE64Encoder ()).encode (raw);\n    return hash;\n}\n"}
{"clone_type": "T2", "method1_id": 8612647, "method2_id": 17456566, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 13783899, "method2_id": 16224017, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8625346, "method2_id": 8778962, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8778962, "method2_id": 14183083, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2711644, "method2_id": 21870537, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 948486, "method2_id": 13902981, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 948487, "method2_id": 2532321, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 22246374, "method2_id": 22993368, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 22993367, "method2_id": 22993368, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 3608108, "method2_id": 6756635, "code1": "public static String SHA512 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-512\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"UTF-8\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n", "code2": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n"}
{"clone_type": "T2", "method1_id": 3768629, "method2_id": 17456565, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1966262, "method2_id": 4471001, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 411631, "method2_id": 11319479, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 411631, "method2_id": 7760800, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2461169, "method2_id": 10287986, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 216274, "method2_id": 216275, "code1": "public void actionPerformed (ActionEvent e) {\n    dirChooser.setFileSelectionMode (JFileChooser.FILES_AND_DIRECTORIES);\n    int i = dirChooser.showOpenDialog (gimme ());\n    if (i == JFileChooser.APPROVE_OPTION) {\n        ripperPathField.setText (dirChooser.getSelectedFile ().toString ());\n    }\n}\n", "code2": "public void actionPerformed (ActionEvent e) {\n    dirChooser.setFileSelectionMode (JFileChooser.FILES_AND_DIRECTORIES);\n    int i = dirChooser.showOpenDialog (gimme ());\n    if (i == JFileChooser.APPROVE_OPTION) {\n        shoutcastPlayer.setText (dirChooser.getSelectedFile ().toString ());\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 367770, "method2_id": 16466520, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 366700, "method2_id": 1715797, "code1": "private static boolean loadClasses () {\n    switch (jvm) {\n        case MRJ_2_0 :\n            try {\n                Class aeTargetClass = Class.forName (\"com.apple.MacOS.AETarget\");\n                Class osUtilsClass = Class.forName (\"com.apple.MacOS.OSUtils\");\n                Class appleEventClass = Class.forName (\"com.apple.MacOS.AppleEvent\");\n                Class aeClass = Class.forName (\"com.apple.MacOS.ae\");\n                aeDescClass = Class.forName (\"com.apple.MacOS.AEDesc\");\n                aeTargetConstructor = aeTargetClass.getDeclaredConstructor (new Class [] {int.class});\n                appleEventConstructor = appleEventClass.getDeclaredConstructor (new Class [] {int.class, int.class, aeTargetClass, int.class, int.class});\n                aeDescConstructor = aeDescClass.getDeclaredConstructor (new Class [] {String.class});\n                makeOSType = osUtilsClass.getDeclaredMethod (\"makeOSType\", new Class [] {String.class});\n                putParameter = appleEventClass.getDeclaredMethod (\"putParameter\", new Class [] {int.class, aeDescClass});\n                sendNoReply = appleEventClass.getDeclaredMethod (\"sendNoReply\", new Class [] {});\n                Field keyDirectObjectField = aeClass.getDeclaredField (\"keyDirectObject\");\n                keyDirectObject = (Integer) keyDirectObjectField.get (null);\n                Field autoGenerateReturnIDField = appleEventClass.getDeclaredField (\"kAutoGenerateReturnID\");\n                kAutoGenerateReturnID = (Integer) autoGenerateReturnIDField.get (null);\n                Field anyTransactionIDField = appleEventClass.getDeclaredField (\"kAnyTransactionID\");\n                kAnyTransactionID = (Integer) anyTransactionIDField.get (null);\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (NoSuchFieldException nsfe) {\n                errorMessage = nsfe.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_2_1 :\n            try {\n                mrjFileUtilsClass = Class.forName (\"com.apple.mrj.MRJFileUtils\");\n                mrjOSTypeClass = Class.forName (\"com.apple.mrj.MRJOSType\");\n                Field systemFolderField = mrjFileUtilsClass.getDeclaredField (\"kSystemFolderType\");\n                kSystemFolderType = systemFolderField.get (null);\n                findFolder = mrjFileUtilsClass.getDeclaredMethod (\"findFolder\", new Class [] {mrjOSTypeClass});\n                getFileCreator = mrjFileUtilsClass.getDeclaredMethod (\"getFileCreator\", new Class [] {File.class});\n                getFileType = mrjFileUtilsClass.getDeclaredMethod (\"getFileType\", new Class [] {File.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchFieldException nsfe) {\n                errorMessage = nsfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (SecurityException se) {\n                errorMessage = se.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_3_0 :\n            try {\n                Class linker = Class.forName (\"com.apple.mrj.jdirect.Linker\");\n                Constructor constructor = linker.getConstructor (new Class [] {Class.class});\n                linkage = constructor.newInstance (new Object [] {BbrowserLauncher.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (InvocationTargetException ite) {\n                errorMessage = ite.getMessage ();\n                return false;\n            } catch (InstantiationException ie) {\n                errorMessage = ie.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_3_1 :\n            try {\n                mrjFileUtilsClass = Class.forName (\"com.apple.mrj.MRJFileUtils\");\n                openURL = mrjFileUtilsClass.getDeclaredMethod (\"openURL\", new Class [] {String.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            }\n            break;\n        default :\n            break;\n    }\n    return true;\n}\n", "code2": "private static boolean loadClasses () {\n    switch (jvm) {\n        case MRJ_2_0 :\n            try {\n                Class aeTargetClass = Class.forName (\"com.apple.MacOS.AETarget\");\n                Class osUtilsClass = Class.forName (\"com.apple.MacOS.OSUtils\");\n                Class appleEventClass = Class.forName (\"com.apple.MacOS.AppleEvent\");\n                Class aeClass = Class.forName (\"com.apple.MacOS.ae\");\n                aeDescClass = Class.forName (\"com.apple.MacOS.AEDesc\");\n                aeTargetConstructor = aeTargetClass.getDeclaredConstructor (new Class [] {int.class});\n                appleEventConstructor = appleEventClass.getDeclaredConstructor (new Class [] {int.class, int.class, aeTargetClass, int.class, int.class});\n                aeDescConstructor = aeDescClass.getDeclaredConstructor (new Class [] {String.class});\n                makeOSType = osUtilsClass.getDeclaredMethod (\"makeOSType\", new Class [] {String.class});\n                putParameter = appleEventClass.getDeclaredMethod (\"putParameter\", new Class [] {int.class, aeDescClass});\n                sendNoReply = appleEventClass.getDeclaredMethod (\"sendNoReply\", new Class [] {});\n                Field keyDirectObjectField = aeClass.getDeclaredField (\"keyDirectObject\");\n                keyDirectObject = (Integer) keyDirectObjectField.get (null);\n                Field autoGenerateReturnIDField = appleEventClass.getDeclaredField (\"kAutoGenerateReturnID\");\n                kAutoGenerateReturnID = (Integer) autoGenerateReturnIDField.get (null);\n                Field anyTransactionIDField = appleEventClass.getDeclaredField (\"kAnyTransactionID\");\n                kAnyTransactionID = (Integer) anyTransactionIDField.get (null);\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (NoSuchFieldException nsfe) {\n                errorMessage = nsfe.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_2_1 :\n            try {\n                mrjFileUtilsClass = Class.forName (\"com.apple.mrj.MRJFileUtils\");\n                mrjOSTypeClass = Class.forName (\"com.apple.mrj.MRJOSType\");\n                Field systemFolderField = mrjFileUtilsClass.getDeclaredField (\"kSystemFolderType\");\n                kSystemFolderType = systemFolderField.get (null);\n                findFolder = mrjFileUtilsClass.getDeclaredMethod (\"findFolder\", new Class [] {mrjOSTypeClass});\n                getFileCreator = mrjFileUtilsClass.getDeclaredMethod (\"getFileCreator\", new Class [] {File.class});\n                getFileType = mrjFileUtilsClass.getDeclaredMethod (\"getFileType\", new Class [] {File.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchFieldException nsfe) {\n                errorMessage = nsfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (SecurityException se) {\n                errorMessage = se.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_3_0 :\n            try {\n                Class linker = Class.forName (\"com.apple.mrj.jdirect.Linker\");\n                Constructor constructor = linker.getConstructor (new Class [] {Class.class});\n                linkage = constructor.newInstance (new Object [] {BrowserLauncher.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (InvocationTargetException ite) {\n                errorMessage = ite.getMessage ();\n                return false;\n            } catch (InstantiationException ie) {\n                errorMessage = ie.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_3_1 :\n            try {\n                mrjFileUtilsClass = Class.forName (\"com.apple.mrj.MRJFileUtils\");\n                openURL = mrjFileUtilsClass.getDeclaredMethod (\"openURL\", new Class [] {String.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            }\n            break;\n        default :\n            break;\n    }\n    return true;\n}\n"}
{"clone_type": "T2", "method1_id": 4518933, "method2_id": 9693857, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 411630, "method2_id": 16351776, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1913136, "method2_id": 7143272, "code1": "private void copyFile (File in, File out) throws Exception {\n    FileChannel sourceChannel = new FileInputStream (in).getChannel ();\n    FileChannel destinationChannel = new FileOutputStream (out).getChannel ();\n    sourceChannel.transferTo (0, sourceChannel.size (), destinationChannel);\n    sourceChannel.close ();\n    destinationChannel.close ();\n}\n", "code2": "private void copyFile (File in, File out) throws IOException {\n    FileChannel sourceChannel = new FileInputStream (in).getChannel ();\n    FileChannel destinationChannel = new FileOutputStream (out).getChannel ();\n    sourceChannel.transferTo (0, sourceChannel.size (), destinationChannel);\n    sourceChannel.close ();\n    destinationChannel.close ();\n}\n"}
{"clone_type": "T2", "method1_id": 8793826, "method2_id": 12678588, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 10844851, "method2_id": 13295660, "code1": "public static double [] [] transp (double [] [] m1) {\n    int m = m1.length;\n    int n = m1 [0].length;\n    double [] [] ret = new double [n] [m];\n    for (int i = 0;\n    i < m; i ++) {\n        for (int j = 0;\n        j < n; j ++) {\n            ret [j] [i] = m1 [i] [j];\n        }\n    }\n    return ret;\n}\n", "code2": "public static double [] [] transpose (double [] [] M) {\n    int lines = M.length;\n    int columns = M [0].length;\n    double [] [] Mtrans = new double [columns] [lines];\n    for (int i = 0;\n    i < lines; i ++) {\n        for (int j = 0;\n        j < columns; j ++) {\n            Mtrans [j] [i] = M [i] [j];\n        }\n    }\n    return Mtrans;\n}\n"}
{"clone_type": "T2", "method1_id": 2746909, "method2_id": 11453370, "code1": "public static Object [] addObjectToArray (Object [] array, Object obj) {\n    Class < ? > compType = Object.class;\n    if (array != null) {\n        compType = array.getClass ().getComponentType ();\n    } else if (obj != null) {\n        compType = obj.getClass ();\n    }\n\n    int newArrLength = (array != null ? array.length + 1 : 1);\n    Object [] newArr = (Object []) Array.newInstance (compType, newArrLength);\n    if (array != null) {\n        System.arraycopy (array, 0, newArr, 0, array.length);\n    }\n    newArr [newArr.length - 1] = obj;\n    return newArr;\n}\n", "code2": "public static Object [] addObjectToArray (Object [] array, Object object) {\n    Class < ? > compType = Object.class;\n    if (array != null) {\n        compType = array.getClass ().getComponentType ();\n    } else if (object != null) {\n        compType = object.getClass ();\n    }\n\n    int newArrLength = (array != null ? array.length + 1 : 1);\n    Object [] newArr = (Object []) Array.newInstance (compType, newArrLength);\n    if (array != null) {\n        System.arraycopy (array, 0, newArr, 0, array.length);\n    }\n    newArr [newArr.length - 1] = object;\n    return newArr;\n}\n"}
{"clone_type": "T2", "method1_id": 6527977, "method2_id": 21247844, "code1": "public static void copy (File in, File out) throws IOException {\n    FileChannel ic = new FileInputStream (in).getChannel ();\n    FileChannel oc = new FileOutputStream (out).getChannel ();\n    ic.transferTo (0, ic.size (), oc);\n    ic.close ();\n    oc.close ();\n}\n", "code2": "public static void kopirujSoubor (File vstup, File vystup) throws IOException {\n    FileChannel sourceChannel = new FileInputStream (vstup).getChannel ();\n    FileChannel destinationChannel = new FileOutputStream (vystup).getChannel ();\n    sourceChannel.transferTo (0, sourceChannel.size (), destinationChannel);\n    sourceChannel.close ();\n    destinationChannel.close ();\n}\n"}
{"clone_type": "T2", "method1_id": 2532322, "method2_id": 14317425, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 11319480, "method2_id": 14317425, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2532321, "method2_id": 18269745, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8625347, "method2_id": 16388707, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 831649, "method2_id": 19912848, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 411631, "method2_id": 4518933, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 411631, "method2_id": 8793825, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1421557, "method2_id": 7760801, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 13028546, "method2_id": 16351776, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 4938100, "method2_id": 16209101, "code1": "public static String sha1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n", "code2": "public static String SHA1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n"}
{"clone_type": "T2", "method1_id": 86878, "method2_id": 205710, "code1": "public static void main (String [] args) {\n    final String dbdriver = \"org.postgresql.Driver\";\n    final String dbconnect = \"jdbc:postgresql://localhost:5432/wdb\";\n    final String dbuser = \"wcitest\";\n    final String dbpasswd = \"\";\n    Connection con = null;\n    Statement statement = null;\n    try {\n        Class.forName (dbdriver);\n        con = DriverManager.getConnection (dbconnect, dbuser, dbpasswd);\n        statement = con.createStatement ();\n    } catch (Exception e) {\n        System.out.println (\"FATAL: cant load the database driver <\" + dbdriver + \">!\");\n        System.exit (1);\n    }\n    String wdbInit = \"SELECT wci.begin('\" + dbuser + \"')\";\n    String sql = \" SELECT * \" + \" FROM wci.read( array['test wci 5'], 'POINT( 10.0 59.0 )', \" + \"                '2009-11-13 00:00:00+00', \" + \"                NULL, \" + \"                array['air temperature', \" + \"                      'air pressure'], \" + \"                NULL, \" + \"                array[-1], \" + \"                NULL::wci.returnFloat )\";\n    final String colNames [] = {\"value\", \"valueParameterName\", \"validTimeFrom\"};\n    ResultSet rs = null;\n    try {\n        statement.execute (wdbInit);\n        rs = statement.executeQuery (sql);\n        ResultSetMetaData rsMetaData = rs.getMetaData ();\n        String data;\n        boolean first;\n        while (rs.next ()) {\n            first = true;\n            for (String name : colNames) {\n                data = rs.getString (name);\n                if (first) {\n                    first = false;\n                } else {\n                    System.out.print (\", \");\n                }\n                if (data != null) System.out.print (data);\n                else System.out.print (\"\\\\N\");\n\n            }\n            System.out.println ();\n        }\n    } catch (Exception ex) {\n        System.out.println (\"SELECT error: \" + ex);\n    } finally {\n        if (rs != null) {\n            try {\n                rs.close ();\n            } catch (SQLException ex) {\n                System.out.println (\"EXCEPTION: rs.close: \" + ex);\n            }\n        }\n    }\n}\n", "code2": "public static void main (String [] args) {\n    final String dbdriver = \"org.postgresql.Driver\";\n    final String dbconnect = \"jdbc:postgresql://localhost:5432/wdb\";\n    final String dbuser = \"wcitest\";\n    final String dbpasswd = \"\";\n    Connection con = null;\n    Statement statement = null;\n    try {\n        Class.forName (dbdriver);\n        con = DriverManager.getConnection (dbconnect, dbuser, dbpasswd);\n        statement = con.createStatement ();\n    } catch (Exception e) {\n        System.out.println (\"FATAL: cant load the database driver <\" + dbdriver + \">!\");\n        System.exit (1);\n    }\n    String wdbInit = \"SELECT wci.begin('\" + dbuser + \"', 999, 999, 999 )\";\n    String sql = \" SELECT * \" + \" FROM wci.read( array['test wci 5'], 'POINT( 10.0 59.0 )', \" + \"                '2009-11-13 00:00:00+00', \" + \"                NULL, \" + \"                array['air temperature', \" + \"                      'air pressure'], \" + \"                NULL, \" + \"                array[-1], \" + \"                NULL::wci.returnFloat )\";\n    final String colNames [] = {\"value\", \"valueParameterName\", \"validTimeFrom\"};\n    ResultSet rs = null;\n    try {\n        statement.execute (wdbInit);\n        rs = statement.executeQuery (sql);\n        ResultSetMetaData rsMetaData = rs.getMetaData ();\n        String data;\n        boolean first;\n        while (rs.next ()) {\n            first = true;\n            for (String name : colNames) {\n                data = rs.getString (name);\n                if (first) {\n                    first = false;\n                } else {\n                    System.out.print (\", \");\n                }\n                if (data != null) System.out.print (data);\n                else System.out.print (\"\\\\N\");\n\n            }\n            System.out.println ();\n        }\n    } catch (Exception ex) {\n        System.out.println (\"SELECT error: \" + ex);\n    } finally {\n        if (rs != null) {\n            try {\n                rs.close ();\n            } catch (SQLException ex) {\n                System.out.println (\"EXCEPTION: rs.close: \" + ex);\n            }\n        }\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 8704580, "method2_id": 12875962, "code1": "@SuppressWarnings(\"unchecked\")\npublic static < T > T [] append (T [] array, T element) {\n    T [] array2 = (T []) Array.newInstance (array.getClass ().getComponentType (), array.length + 1);\n    System.arraycopy (array, 0, array2, 0, array.length);\n    array2 [array.length] = element;\n    return array2;\n}\n", "code2": "@SuppressWarnings(\"unchecked\")\npublic static < T > T [] addToArray (T [] array, T el) {\n    T [] newArray = (T []) Array.newInstance (array.getClass ().getComponentType (), array.length + 1);\n    System.arraycopy (array, 0, newArray, 0, array.length);\n    newArray [array.length] = el;\n    return newArray;\n}\n"}
{"clone_type": "T2", "method1_id": 6814855, "method2_id": 7132185, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 54700, "method2_id": 336028, "code1": "protected boolean internalCompile (String [] args) {\n    System.out.println (\"Args: \");\n    for (String arg : args) {\n        System.out.print (arg + \" \");\n    }\n    System.out.println ();\n    ClassLoader cl = Thread.currentThread ().getContextClassLoader ();\n    Class comSunToolsJavacMainClass = null;\n    try {\n        comSunToolsJavacMainClass = cl.loadClass (\"pl.wcislo.sbql4j.tools.javac.Main\");\n        try {\n            Method compileMethod = comSunToolsJavacMainClass.getMethod (\"compile\", compile141MethodSignature);\n            try {\n                Object result = compileMethod.invoke (null, new Object [] {args, new PrintWriter (out)});\n                if (! (result instanceof Integer)) {\n                    return false;\n                }\n                return ((Integer) result).intValue () == 0;\n            } catch (IllegalAccessException e3) {\n                return false;\n            } catch (IllegalArgumentException e3) {\n                return false;\n            } catch (InvocationTargetException e3) {\n                return false;\n            }\n        } catch (NoSuchMethodException e2) {\n            System.out.println (\"ERROR: Compile failed with error:\" + e2.toString ());\n        }\n    } catch (ClassNotFoundException e) {\n        e.printStackTrace ();\n        return false;\n    } catch (SecurityException e) {\n        return false;\n    }\n    return true;\n}\n", "code2": "protected boolean internalCompile (String [] args) {\n    System.out.println (\"Args: \");\n    for (String arg : args) {\n        System.out.print (arg + \" \");\n    }\n    System.out.println ();\n    ClassLoader cl = Thread.currentThread ().getContextClassLoader ();\n    Class comSunToolsJavacMainClass = null;\n    try {\n        comSunToolsJavacMainClass = cl.loadClass (\"com.sun.tools.javac.Main\");\n        try {\n            Method compileMethod = comSunToolsJavacMainClass.getMethod (\"compile\", compile141MethodSignature);\n            try {\n                Object result = compileMethod.invoke (null, new Object [] {args, new PrintWriter (out)});\n                if (! (result instanceof Integer)) {\n                    return false;\n                }\n                return ((Integer) result).intValue () == 0;\n            } catch (IllegalAccessException e3) {\n                return false;\n            } catch (IllegalArgumentException e3) {\n                return false;\n            } catch (InvocationTargetException e3) {\n                return false;\n            }\n        } catch (NoSuchMethodException e2) {\n            System.out.println (\"ERROR: Compile failed with error:\" + e2.toString ());\n        }\n    } catch (ClassNotFoundException e) {\n        e.printStackTrace ();\n        return false;\n    } catch (SecurityException e) {\n        return false;\n    }\n    return true;\n}\n"}
{"clone_type": "T2", "method1_id": 2141749, "method2_id": 14785308, "code1": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n", "code2": "public static String sha1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n"}
{"clone_type": "T2", "method1_id": 15571542, "method2_id": 16466519, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 10287987, "method2_id": 12678588, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 831650, "method2_id": 7132185, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 16388707, "method2_id": 16466520, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 13783898, "method2_id": 16466520, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 14183083, "method2_id": 21870537, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1458628, "method2_id": 8612648, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 12614305, "method2_id": 16351776, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 3608108, "method2_id": 7317602, "code1": "public static String SHA512 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-512\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"UTF-8\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n", "code2": "public static String SHA1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n"}
{"clone_type": "T2", "method1_id": 115582, "method2_id": 183041, "code1": "public static void main (String [] args) {\n    final String dbdriver = \"org.postgresql.Driver\";\n    final String dbconnect = \"jdbc:postgresql://localhost:5432/wdb\";\n    final String dbuser = \"wcitest\";\n    final String dbpasswd = \"\";\n    Connection con = null;\n    Statement statement = null;\n    try {\n        Class.forName (dbdriver);\n        con = DriverManager.getConnection (dbconnect, dbuser, dbpasswd);\n        statement = con.createStatement ();\n    } catch (Exception e) {\n        System.out.println (\"FATAL: cant load the database driver <\" + dbdriver + \">!\");\n        System.exit (1);\n    }\n    String wdbInit = \"SELECT wci.begin('\" + dbuser + \"', 999, 999, 999 )\";\n    String sql = \" SELECT * \" + \" FROM wci.read( array['test wci 5'], 'POINT( 10.0 59.0 )', \" + \"                '2009-11-13 00:00:00+00', \" + \"                NULL, \" + \"                array['air temperature', \" + \"                      'air pressure'], \" + \"                NULL, \" + \"                array[-1], \" + \"                NULL::wci.returnFloat )\";\n    final String colNames [] = {\"value\", \"valueParameterName\", \"validTimeFrom\"};\n    ResultSet rs = null;\n    try {\n        statement.execute (wdbInit);\n        rs = statement.executeQuery (sql);\n        ResultSetMetaData rsMetaData = rs.getMetaData ();\n        String data;\n        boolean first;\n        while (rs.next ()) {\n            first = true;\n            for (String name : colNames) {\n                data = rs.getString (name);\n                if (first) {\n                    first = false;\n                } else {\n                    System.out.print (\", \");\n                }\n                if (data != null) System.out.print (data);\n                else System.out.print (\"\\\\N\");\n\n            }\n            System.out.println ();\n        }\n    } catch (Exception ex) {\n        System.out.println (\"SELECT error: \" + ex);\n    } finally {\n        if (rs != null) {\n            try {\n                rs.close ();\n            } catch (SQLException ex) {\n                System.out.println (\"EXCEPTION: rs.close: \" + ex);\n            }\n        }\n    }\n}\n", "code2": "public static void main (String [] args) {\n    final String dbdriver = \"org.postgresql.Driver\";\n    final String dbconnect = \"jdbc:postgresql://localhost:5432/wdb\";\n    final String dbuser = \"wcitest\";\n    final String dbpasswd = \"\";\n    Connection con = null;\n    Statement statement = null;\n    try {\n        Class.forName (dbdriver);\n        con = DriverManager.getConnection (dbconnect, dbuser, dbpasswd);\n        statement = con.createStatement ();\n    } catch (Exception e) {\n        System.out.println (\"FATAL: cant load the database driver <\" + dbdriver + \">!\");\n        System.exit (1);\n    }\n    String wdbInit = \"SELECT wci.begin('\" + dbuser + \"')\";\n    String sql = \" SELECT * \" + \" FROM wci.read( array['test wci 5'], 'POINT( 10.0 59.0 )', \" + \"                '2009-11-13 00:00:00+00', \" + \"                NULL, \" + \"                array['air temperature', \" + \"                      'air pressure'], \" + \"                NULL, \" + \"                array[-1], \" + \"                NULL::wci.returnFloat )\";\n    final String colNames [] = {\"value\", \"valueParameterName\", \"validTimeFrom\"};\n    ResultSet rs = null;\n    try {\n        statement.execute (wdbInit);\n        rs = statement.executeQuery (sql);\n        ResultSetMetaData rsMetaData = rs.getMetaData ();\n        String data;\n        boolean first;\n        while (rs.next ()) {\n            first = true;\n            for (String name : colNames) {\n                data = rs.getString (name);\n                if (first) {\n                    first = false;\n                } else {\n                    System.out.print (\", \");\n                }\n                if (data != null) System.out.print (data);\n                else System.out.print (\"\\\\N\");\n\n            }\n            System.out.println ();\n        }\n    } catch (Exception ex) {\n        System.out.println (\"SELECT error: \" + ex);\n    } finally {\n        if (rs != null) {\n            try {\n                rs.close ();\n            } catch (SQLException ex) {\n                System.out.println (\"EXCEPTION: rs.close: \" + ex);\n            }\n        }\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 266990, "method2_id": 22271237, "code1": "public static void copyFile (File sourceFile, File destFile) throws IOException {\n    if (! destFile.exists ()) {\n        destFile.createNewFile ();\n    }\n    FileChannel source = null;\n    FileChannel destination = null;\n    try {\n        source = new FileInputStream (sourceFile).getChannel ();\n        destination = new FileOutputStream (destFile).getChannel ();\n        destination.transferFrom (source, 0, source.size ());\n    } finally {\n        if (source != null) {\n            source.close ();\n        }\n        if (destination != null) {\n            destination.close ();\n        }\n    }\n}\n", "code2": "public static void copy (File sourceFile, File destFile) throws IOException {\n    if (! destFile.exists ()) {\n        destFile.createNewFile ();\n    }\n    FileChannel source = null;\n    FileChannel destination = null;\n    try {\n        source = new FileInputStream (sourceFile).getChannel ();\n        destination = new FileOutputStream (destFile).getChannel ();\n        destination.transferFrom (source, 0, source.size ());\n    } finally {\n        if (source != null) {\n            source.close ();\n        }\n        if (destination != null) {\n            destination.close ();\n        }\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 1966263, "method2_id": 13028546, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 367771, "method2_id": 22993367, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 21827619, "method2_id": 22810500, "code1": "public static String SHA1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n", "code2": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n"}
{"clone_type": "T2", "method1_id": 8793826, "method2_id": 21488868, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 79841, "method2_id": 81852, "code1": "public void actionPerformed (ActionEvent e) {\n    JFileChooser choix = new JFileChooser ();\n    choix.addChoosableFileFilter (parent.new FilterSound ());\n    choix.setCurrentDirectory (new java.io.File (parent.NomCarte + \"/Sound\"));\n    int retour = choix.showOpenDialog (null);\n    if (retour == JFileChooser.APPROVE_OPTION) {\n        if (! new File (parent.NomCarte + \"/Sound/\" + choix.getSelectedFile ().getName ()).exists ()) parent.copyfile (choix.getSelectedFile ().getAbsolutePath (), parent.NomCarte + \"/Sound/\" + choix.getSelectedFile ().getName ());\n\n        JTextField Edit = null;\n        if (e.getSource ().equals (Bt_ChooseSonAttaque)) Edit = Ed_SonAttaque;\n        else if (e.getSource ().equals (Bt_ChooseSonBlesse)) Edit = Ed_SonBlesse;\n        else if (e.getSource ().equals (Bt_ChooseSonMagie)) Edit = Ed_SonMagie;\n\n        if (Edit != null) Edit.setText (\"Sound\\\\\" + choix.getSelectedFile ().getName ());\n\n        SaveClasses ();\n    }\n}\n", "code2": "public void actionPerformed (ActionEvent e) {\n    JFileChooser choix = new JFileChooser ();\n    choix.addChoosableFileFilter (parent.new FilterSound ());\n    choix.setCurrentDirectory (new java.io.File (parent.NomCarte + \"/Sound\"));\n    int retour = choix.showOpenDialog (null);\n    if (retour == JFileChooser.APPROVE_OPTION) {\n        if (! new File (parent.NomCarte + \"/Sound/\" + choix.getSelectedFile ().getName ()).exists ()) parent.copyfile (choix.getSelectedFile ().getAbsolutePath (), parent.NomCarte + \"/Sound/\" + choix.getSelectedFile ().getName ());\n\n        JTextField Edit = null;\n        if (e.getSource ().equals (Bt_ChooseSonAttaque)) Edit = Ed_SonAttaque;\n        else if (e.getSource ().equals (Bt_ChooseSonBlesse)) Edit = Ed_SonBlesse;\n        else if (e.getSource ().equals (Bt_ChooseSonMagie)) Edit = Ed_SonMagie;\n\n        if (Edit != null) Edit.setText (\"Sound\\\\\" + choix.getSelectedFile ().getName ());\n\n        SaveMonstre ();\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 7132185, "method2_id": 18731110, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1421558, "method2_id": 8778961, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 3324262, "method2_id": 17468722, "code1": "public RMatrix transposed () {\n    RMatrix m = new RMatrix (columns, rows);\n    for (int r = 0;\n    r < rows; r ++) {\n        for (int c = 0;\n        c < columns; c ++) {\n            m.coefficients [c] [r] = coefficients [r] [c];\n        }\n    }\n    return m;\n}\n", "code2": "public CMatrix transposed () {\n    CMatrix m = new CMatrix (columns, rows);\n    for (int r = 0;\n    r < rows; r ++) {\n        for (int c = 0;\n        c < columns; c ++) {\n            m.coefficients [c] [r] = coefficients [r] [c];\n        }\n    }\n    return m;\n}\n"}
{"clone_type": "T2", "method1_id": 9088423, "method2_id": 9693856, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 4623013, "method2_id": 9693856, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8778962, "method2_id": 18269744, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 7760801, "method2_id": 9088422, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 18773058, "method2_id": 21636561, "code1": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n", "code2": "public static String SHA1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n"}
{"clone_type": "T2", "method1_id": 411630, "method2_id": 2461169, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 9592646, "method2_id": 23252484, "code1": "public static void copy (String path1, String path2) throws IOException {\n    FileReader in = new FileReader (path1);\n    FileWriter out = new FileWriter (path2);\n    int c;\n    while ((c = in.read ()) != - 1) out.write (c);\n\n    in.close ();\n    out.close ();\n}\n", "code2": "public static void copy (File file1, File file2) throws IOException {\n    FileReader in = new FileReader (file1);\n    FileWriter out = new FileWriter (file2);\n    int c;\n    while ((c = in.read ()) != - 1) out.write (c);\n\n    in.close ();\n    out.close ();\n}\n"}
{"clone_type": "T2", "method1_id": 7760030, "method2_id": 7760031, "code1": "private void loadNumberFormats () {\n    String fileToLocate = \"/\" + FILENAME_NUMBER_FMT;\n    URL url = getClass ().getClassLoader ().getResource (fileToLocate);\n    if (url == null) {\n        return;\n    }\n    List < String > lines;\n    try {\n        lines = IOUtils.readLines (url.openStream ());\n    } catch (IOException e) {\n        throw new ConfigurationException (\"Problem loading file \" + fileToLocate, e);\n    }\n    for (String line : lines) {\n        if (line.startsWith (\"#\") || StringUtils.isBlank (line)) {\n            continue;\n        }\n        String [] parts = StringUtils.split (line, \"=\");\n        addFormat (parts [0], new DecimalFormat (parts [1]));\n    }\n}\n", "code2": "private void loadDateFormats () {\n    String fileToLocate = \"/\" + FILENAME_DATE_FMT;\n    URL url = getClass ().getClassLoader ().getResource (fileToLocate);\n    if (url == null) {\n        return;\n    }\n    List < String > lines;\n    try {\n        lines = IOUtils.readLines (url.openStream ());\n    } catch (IOException e) {\n        throw new ConfigurationException (\"Problem loading file \" + fileToLocate, e);\n    }\n    for (String line : lines) {\n        if (line.startsWith (\"#\") || StringUtils.isBlank (line)) {\n            continue;\n        }\n        String [] parts = StringUtils.split (line, \"=\");\n        addFormat (parts [0], new SimpleDateFormat (parts [1]));\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 250595, "method2_id": 8793826, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 4471001, "method2_id": 16466519, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 4518933, "method2_id": 18269745, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 12172485, "method2_id": 15571541, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1966263, "method2_id": 19912847, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 4223265, "method2_id": 18773058, "code1": "public static String getMD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n", "code2": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n"}
{"clone_type": "T2", "method1_id": 5170545, "method2_id": 23677153, "code1": "public static List < Integer > primeFactors (int number) {\n    int n = number;\n    List < Integer > factors = new ArrayList < Integer > ();\n    for (int i = 2;\n    i <= n; i ++) {\n        while (n % i == 0) {\n            factors.add (i);\n            n /= i;\n        }\n    }\n    return factors;\n}\n", "code2": "public static List < Integer > primeFactors2 (int number) {\n    int n = number;\n    List < Integer > factors = new ArrayList < Integer > ();\n    for (int i = 2;\n    i <= n; i ++) {\n        while (n % i == 0) {\n            factors.add (i);\n            n /= i;\n        }\n    }\n    return factors;\n}\n"}
{"clone_type": "T2", "method1_id": 326355, "method2_id": 395847, "code1": "public void start (Gedcom gedcom) {\n    String cmd = getValueFromUser (\"executables\", translate (\"WhichExecutable\"), new String [0]);\n    if (cmd == null) return;\n\n    try {\n        Process process = Runtime.getRuntime ().exec (cmd);\n        BufferedReader in = new BufferedReader (new InputStreamReader (process.getInputStream ()));\n        while (true) {\n            String line = in.readLine ();\n            if (line == null) break;\n\n            println (line);\n        }\n    } catch (IOException ioe) {\n        println (translate (\"Error\") + ioe.getMessage ());\n    }\n}\n", "code2": "public void start (Object context) {\n    String cmd = getValueFromUser (\"executables\", i18n (\"WhichExecutable\"), new String [0]);\n    if (cmd == null) return;\n\n    try {\n        Process process = Runtime.getRuntime ().exec (cmd);\n        BufferedReader in = new BufferedReader (new InputStreamReader (process.getInputStream ()));\n        while (true) {\n            String line = in.readLine ();\n            if (line == null) break;\n\n            println (line);\n        }\n    } catch (IOException ioe) {\n        println (i18n (\"Error\") + ioe.getMessage ());\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 8612647, "method2_id": 12678589, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 11453370, "method2_id": 12194043, "code1": "public static Object [] addObjectToArray (Object [] array, Object object) {\n    Class < ? > compType = Object.class;\n    if (array != null) {\n        compType = array.getClass ().getComponentType ();\n    } else if (object != null) {\n        compType = object.getClass ();\n    }\n\n    int newArrLength = (array != null ? array.length + 1 : 1);\n    Object [] newArr = (Object []) Array.newInstance (compType, newArrLength);\n    if (array != null) {\n        System.arraycopy (array, 0, newArr, 0, array.length);\n    }\n    newArr [newArr.length - 1] = object;\n    return newArr;\n}\n", "code2": "public static Object [] addObjectToArray (Object [] array, Object obj) {\n    Class < ? > compType = Object.class;\n    if (array != null) {\n        compType = array.getClass ().getComponentType ();\n    } else if (obj != null) {\n        compType = obj.getClass ();\n    }\n\n    int newArrLength = (array != null ? array.length + 1 : 1);\n    Object [] newArr = (Object []) Array.newInstance (compType, newArrLength);\n    if (array != null) {\n        System.arraycopy (array, 0, newArr, 0, array.length);\n    }\n    newArr [newArr.length - 1] = obj;\n    return newArr;\n}\n"}
{"clone_type": "T2", "method1_id": 1990444, "method2_id": 2874199, "code1": "private static boolean loadClasses () {\n    switch (jvm) {\n        case MRJ_2_0 :\n            try {\n                Class aeTargetClass = Class.forName (\"com.apple.MacOS.AETarget\");\n                Class osUtilsClass = Class.forName (\"com.apple.MacOS.OSUtils\");\n                Class appleEventClass = Class.forName (\"com.apple.MacOS.AppleEvent\");\n                Class aeClass = Class.forName (\"com.apple.MacOS.ae\");\n                aeDescClass = Class.forName (\"com.apple.MacOS.AEDesc\");\n                aeTargetConstructor = aeTargetClass.getDeclaredConstructor (new Class [] {int.class});\n                appleEventConstructor = appleEventClass.getDeclaredConstructor (new Class [] {int.class, int.class, aeTargetClass, int.class, int.class});\n                aeDescConstructor = aeDescClass.getDeclaredConstructor (new Class [] {String.class});\n                makeOSType = osUtilsClass.getDeclaredMethod (\"makeOSType\", new Class [] {String.class});\n                putParameter = appleEventClass.getDeclaredMethod (\"putParameter\", new Class [] {int.class, aeDescClass});\n                sendNoReply = appleEventClass.getDeclaredMethod (\"sendNoReply\", new Class [] {});\n                Field keyDirectObjectField = aeClass.getDeclaredField (\"keyDirectObject\");\n                keyDirectObject = (Integer) keyDirectObjectField.get (null);\n                Field autoGenerateReturnIDField = appleEventClass.getDeclaredField (\"kAutoGenerateReturnID\");\n                kAutoGenerateReturnID = (Integer) autoGenerateReturnIDField.get (null);\n                Field anyTransactionIDField = appleEventClass.getDeclaredField (\"kAnyTransactionID\");\n                kAnyTransactionID = (Integer) anyTransactionIDField.get (null);\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (NoSuchFieldException nsfe) {\n                errorMessage = nsfe.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_2_1 :\n            try {\n                mrjFileUtilsClass = Class.forName (\"com.apple.mrj.MRJFileUtils\");\n                mrjOSTypeClass = Class.forName (\"com.apple.mrj.MRJOSType\");\n                Field systemFolderField = mrjFileUtilsClass.getDeclaredField (\"kSystemFolderType\");\n                kSystemFolderType = systemFolderField.get (null);\n                findFolder = mrjFileUtilsClass.getDeclaredMethod (\"findFolder\", new Class [] {mrjOSTypeClass});\n                getFileCreator = mrjFileUtilsClass.getDeclaredMethod (\"getFileCreator\", new Class [] {File.class});\n                getFileType = mrjFileUtilsClass.getDeclaredMethod (\"getFileType\", new Class [] {File.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchFieldException nsfe) {\n                errorMessage = nsfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (SecurityException se) {\n                errorMessage = se.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_3_0 :\n            try {\n                Class linker = Class.forName (\"com.apple.mrj.jdirect.Linker\");\n                Constructor constructor = linker.getConstructor (new Class [] {Class.class});\n                linkage = constructor.newInstance (new Object [] {BrowserLauncher.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (InvocationTargetException ite) {\n                errorMessage = ite.getMessage ();\n                return false;\n            } catch (InstantiationException ie) {\n                errorMessage = ie.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_3_1 :\n            try {\n                mrjFileUtilsClass = Class.forName (\"com.apple.mrj.MRJFileUtils\");\n                openURL = mrjFileUtilsClass.getDeclaredMethod (\"openURL\", new Class [] {String.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            }\n            break;\n        default :\n            break;\n    }\n    return true;\n}\n", "code2": "private static boolean loadClasses () {\n    switch (jvm) {\n        case MRJ_2_0 :\n            try {\n                Class aeTargetClass = Class.forName (\"com.apple.MacOS.AETarget\");\n                Class osUtilsClass = Class.forName (\"com.apple.MacOS.OSUtils\");\n                Class appleEventClass = Class.forName (\"com.apple.MacOS.AppleEvent\");\n                Class aeClass = Class.forName (\"com.apple.MacOS.ae\");\n                aeDescClass = Class.forName (\"com.apple.MacOS.AEDesc\");\n                aeTargetConstructor = aeTargetClass.getDeclaredConstructor (new Class [] {int.class});\n                appleEventConstructor = appleEventClass.getDeclaredConstructor (new Class [] {int.class, int.class, aeTargetClass, int.class, int.class});\n                aeDescConstructor = aeDescClass.getDeclaredConstructor (new Class [] {String.class});\n                makeOSType = osUtilsClass.getDeclaredMethod (\"makeOSType\", new Class [] {String.class});\n                putParameter = appleEventClass.getDeclaredMethod (\"putParameter\", new Class [] {int.class, aeDescClass});\n                sendNoReply = appleEventClass.getDeclaredMethod (\"sendNoReply\", new Class [] {});\n                Field keyDirectObjectField = aeClass.getDeclaredField (\"keyDirectObject\");\n                keyDirectObject = (Integer) keyDirectObjectField.get (null);\n                Field autoGenerateReturnIDField = appleEventClass.getDeclaredField (\"kAutoGenerateReturnID\");\n                kAutoGenerateReturnID = (Integer) autoGenerateReturnIDField.get (null);\n                Field anyTransactionIDField = appleEventClass.getDeclaredField (\"kAnyTransactionID\");\n                kAnyTransactionID = (Integer) anyTransactionIDField.get (null);\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (NoSuchFieldException nsfe) {\n                errorMessage = nsfe.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_2_1 :\n            try {\n                mrjFileUtilsClass = Class.forName (\"com.apple.mrj.MRJFileUtils\");\n                mrjOSTypeClass = Class.forName (\"com.apple.mrj.MRJOSType\");\n                Field systemFolderField = mrjFileUtilsClass.getDeclaredField (\"kSystemFolderType\");\n                kSystemFolderType = systemFolderField.get (null);\n                findFolder = mrjFileUtilsClass.getDeclaredMethod (\"findFolder\", new Class [] {mrjOSTypeClass});\n                getFileCreator = mrjFileUtilsClass.getDeclaredMethod (\"getFileCreator\", new Class [] {File.class});\n                getFileType = mrjFileUtilsClass.getDeclaredMethod (\"getFileType\", new Class [] {File.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchFieldException nsfe) {\n                errorMessage = nsfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (SecurityException se) {\n                errorMessage = se.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_3_0 :\n            try {\n                Class linker = Class.forName (\"com.apple.mrj.jdirect.Linker\");\n                Constructor constructor = linker.getConstructor (new Class [] {Class.class});\n                linkage = constructor.newInstance (new Object [] {Browser.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            } catch (InvocationTargetException ite) {\n                errorMessage = ite.getMessage ();\n                return false;\n            } catch (InstantiationException ie) {\n                errorMessage = ie.getMessage ();\n                return false;\n            } catch (IllegalAccessException iae) {\n                errorMessage = iae.getMessage ();\n                return false;\n            }\n            break;\n        case MRJ_3_1 :\n            try {\n                mrjFileUtilsClass = Class.forName (\"com.apple.mrj.MRJFileUtils\");\n                openURL = mrjFileUtilsClass.getDeclaredMethod (\"openURL\", new Class [] {String.class});\n            } catch (ClassNotFoundException cnfe) {\n                errorMessage = cnfe.getMessage ();\n                return false;\n            } catch (NoSuchMethodException nsme) {\n                errorMessage = nsme.getMessage ();\n                return false;\n            }\n            break;\n        default :\n            break;\n    }\n    return true;\n}\n"}
{"clone_type": "T2", "method1_id": 18773058, "method2_id": 20603864, "code1": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n", "code2": "public static String SHA1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n"}
{"clone_type": "T2", "method1_id": 13292295, "method2_id": 15854368, "code1": "public static void copyURLToFile (URL source, File destination) throws IOException {\n    InputStream input = source.openStream ();\n    try {\n        FileOutputStream output = openOutputStream (destination);\n        try {\n            IOUtils.copy (input, output);\n        } finally {\n            IOUtils.closeQuietly (output);\n        }\n    } finally {\n        IOUtils.closeQuietly (input);\n    }\n}\n", "code2": "public static void copyURLToFile (URL source, File destination) throws IOException {\n    InputStream input = source.openStream ();\n    try {\n        FileOutputStream output = openOutputStream (destination);\n        try {\n            IOUtils.copy (input, output);\n        } finally {\n            IOUtils.close (output);\n        }\n    } finally {\n        IOUtils.close (input);\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 4518933, "method2_id": 12678589, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 16224017, "method2_id": 18731110, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 16224018, "method2_id": 18623182, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 9792904, "method2_id": 22262998, "code1": "public static String SHA1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n", "code2": "public static String SHA512 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-512\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"UTF-8\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n"}
{"clone_type": "T2", "method1_id": 2461168, "method2_id": 16224018, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 16351776, "method2_id": 22993367, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2461169, "method2_id": 8612647, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 948487, "method2_id": 2461168, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 7760801, "method2_id": 13902980, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 3768629, "method2_id": 11548510, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2532321, "method2_id": 19584878, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 7317602, "method2_id": 8385785, "code1": "public static String SHA1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n", "code2": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n"}
{"clone_type": "T2", "method1_id": 8778961, "method2_id": 13028547, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 19142736, "method2_id": 19142737, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2711644, "method2_id": 2711645, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 23347274, "method2_id": 23347277, "code1": "protected static final int findClosest (ByteChunk name, ByteEntry [] array, int len) {\n    int a = 0;\n    int b = len - 1;\n    if (b == - 1) {\n        return - 1;\n    }\n    if (compare (name, array [0].name) < 0) {\n        return - 1;\n    }\n    if (b == 0) {\n        return 0;\n    }\n    int i = 0;\n    while (true) {\n        i = (b + a) / 2;\n        int result = compare (name, array [i].name);\n        if (result == 1) {\n            a = i;\n        } else if (result == 0) {\n            return i;\n        } else {\n            b = i;\n        }\n\n        if ((b - a) == 1) {\n            int result2 = compare (name, array [b].name);\n            if (result2 < 0) {\n                return a;\n            } else {\n                return b;\n            }\n        }\n    }\n}\n", "code2": "protected static final int findClosest (CharChunk name, CharEntry [] array, int len) {\n    int a = 0;\n    int b = len - 1;\n    if (b == - 1) {\n        return - 1;\n    }\n    if (compare (name, array [0].name) < 0) {\n        return - 1;\n    }\n    if (b == 0) {\n        return 0;\n    }\n    int i = 0;\n    while (true) {\n        i = (b + a) / 2;\n        int result = compare (name, array [i].name);\n        if (result == 1) {\n            a = i;\n        } else if (result == 0) {\n            return i;\n        } else {\n            b = i;\n        }\n\n        if ((b - a) == 1) {\n            int result2 = compare (name, array [b].name);\n            if (result2 < 0) {\n                return a;\n            } else {\n                return b;\n            }\n        }\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 17456565, "method2_id": 21488869, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 6031248, "method2_id": 14581601, "code1": "public static void copyFile (File source, File dest) throws IOException {\n    FileChannel in = null, out = null;\n    try {\n        in = new FileInputStream (source).getChannel ();\n        out = new FileOutputStream (dest).getChannel ();\n        long size = in.size ();\n        MappedByteBuffer buf = in.map (FileChannel.MapMode.READ_ONLY, 0, size);\n        out.write (buf);\n    } finally {\n        if (in != null) in.close ();\n\n        if (out != null) out.close ();\n\n    }\n}\n", "code2": "public static void fileCopy (File source, File dest) throws IOException {\n    FileChannel in = null, out = null;\n    try {\n        in = new FileInputStream (source).getChannel ();\n        out = new FileOutputStream (dest).getChannel ();\n        long size = in.size ();\n        MappedByteBuffer buf = in.map (FileChannel.MapMode.READ_ONLY, 0, size);\n        out.write (buf);\n    } finally {\n        if (in != null) in.close ();\n\n        if (out != null) out.close ();\n\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 4471001, "method2_id": 4623012, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 411631, "method2_id": 16224017, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 42892, "method2_id": 115582, "code1": "public static void main (String [] args) {\n    final String dbdriver = \"org.postgresql.Driver\";\n    final String dbconnect = \"jdbc:postgresql://localhost:5432/wdb\";\n    final String dbuser = \"wcitest\";\n    final String dbpasswd = \"\";\n    Connection con = null;\n    Statement statement = null;\n    try {\n        Class.forName (dbdriver);\n        con = DriverManager.getConnection (dbconnect, dbuser, dbpasswd);\n        statement = con.createStatement ();\n    } catch (Exception e) {\n        System.out.println (\"FATAL: cant load the database driver <\" + dbdriver + \">!\");\n        System.exit (1);\n    }\n    String wdbInit = \"SELECT wci.begin('\" + dbuser + \"')\";\n    String sql = \" SELECT * \" + \" FROM wci.read( array['test wci 5'], 'POINT( 10.0 59.0 )', \" + \"                '2009-11-13 00:00:00+00', \" + \"                NULL, \" + \"                array['air temperature', \" + \"                      'air pressure'], \" + \"                NULL, \" + \"                array[-1], \" + \"                NULL::wci.returnFloat )\";\n    final String colNames [] = {\"value\", \"valueParameterName\", \"validTimeFrom\"};\n    ResultSet rs = null;\n    try {\n        statement.execute (wdbInit);\n        rs = statement.executeQuery (sql);\n        ResultSetMetaData rsMetaData = rs.getMetaData ();\n        String data;\n        boolean first;\n        while (rs.next ()) {\n            first = true;\n            for (String name : colNames) {\n                data = rs.getString (name);\n                if (first) {\n                    first = false;\n                } else {\n                    System.out.print (\", \");\n                }\n                if (data != null) System.out.print (data);\n                else System.out.print (\"\\\\N\");\n\n            }\n            System.out.println ();\n        }\n    } catch (Exception ex) {\n        System.out.println (\"SELECT error: \" + ex);\n    } finally {\n        if (rs != null) {\n            try {\n                rs.close ();\n            } catch (SQLException ex) {\n                System.out.println (\"EXCEPTION: rs.close: \" + ex);\n            }\n        }\n    }\n}\n", "code2": "public static void main (String [] args) {\n    final String dbdriver = \"org.postgresql.Driver\";\n    final String dbconnect = \"jdbc:postgresql://localhost:5432/wdb\";\n    final String dbuser = \"wcitest\";\n    final String dbpasswd = \"\";\n    Connection con = null;\n    Statement statement = null;\n    try {\n        Class.forName (dbdriver);\n        con = DriverManager.getConnection (dbconnect, dbuser, dbpasswd);\n        statement = con.createStatement ();\n    } catch (Exception e) {\n        System.out.println (\"FATAL: cant load the database driver <\" + dbdriver + \">!\");\n        System.exit (1);\n    }\n    String wdbInit = \"SELECT wci.begin('\" + dbuser + \"', 999, 999, 999 )\";\n    String sql = \" SELECT * \" + \" FROM wci.read( array['test wci 5'], 'POINT( 10.0 59.0 )', \" + \"                '2009-11-13 00:00:00+00', \" + \"                NULL, \" + \"                array['air temperature', \" + \"                      'air pressure'], \" + \"                NULL, \" + \"                array[-1], \" + \"                NULL::wci.returnFloat )\";\n    final String colNames [] = {\"value\", \"valueParameterName\", \"validTimeFrom\"};\n    ResultSet rs = null;\n    try {\n        statement.execute (wdbInit);\n        rs = statement.executeQuery (sql);\n        ResultSetMetaData rsMetaData = rs.getMetaData ();\n        String data;\n        boolean first;\n        while (rs.next ()) {\n            first = true;\n            for (String name : colNames) {\n                data = rs.getString (name);\n                if (first) {\n                    first = false;\n                } else {\n                    System.out.print (\", \");\n                }\n                if (data != null) System.out.print (data);\n                else System.out.print (\"\\\\N\");\n\n            }\n            System.out.println ();\n        }\n    } catch (Exception ex) {\n        System.out.println (\"SELECT error: \" + ex);\n    } finally {\n        if (rs != null) {\n            try {\n                rs.close ();\n            } catch (SQLException ex) {\n                System.out.println (\"EXCEPTION: rs.close: \" + ex);\n            }\n        }\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 1458629, "method2_id": 11548510, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2532322, "method2_id": 19584877, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2532322, "method2_id": 4623012, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8625346, "method2_id": 8793826, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 4471001, "method2_id": 8778961, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 15571541, "method2_id": 18623183, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 12172485, "method2_id": 14317425, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 4471001, "method2_id": 15571541, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 12678588, "method2_id": 14317426, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 11548511, "method2_id": 13028546, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 7132185, "method2_id": 22993368, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2711645, "method2_id": 22246374, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 7132185, "method2_id": 18269745, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1966262, "method2_id": 8612648, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1982368, "method2_id": 3538574, "code1": "private boolean deleteDirectory (File path) {\n    if (path.exists ()) {\n        File [] files = path.listFiles ();\n        for (int i = 0;\n        i < files.length; i ++) {\n            if (files [i].isDirectory ()) {\n                deleteDirectory (files [i]);\n            } else {\n                files [i].delete ();\n            }\n        }\n    }\n    return (path.delete ());\n}\n", "code2": "private boolean deleteDirectory (File file) {\n    if (file.exists ()) {\n        File [] files = file.listFiles ();\n        for (int i = 0;\n        i < files.length; i ++) {\n            if (files [i].isDirectory ()) {\n                deleteDirectory (files [i]);\n            } else {\n                files [i].delete ();\n            }\n        }\n    }\n    return (file.delete ());\n}\n"}
{"clone_type": "T2", "method1_id": 97594, "method2_id": 216275, "code1": "public void actionPerformed (ActionEvent e) {\n    dirChooser.setFileSelectionMode (JFileChooser.FILES_AND_DIRECTORIES);\n    int i = dirChooser.showOpenDialog (gimme ());\n    if (i == JFileChooser.APPROVE_OPTION) {\n        ripperPathField.setText (dirChooser.getSelectedFile ().toString ());\n    }\n}\n", "code2": "public void actionPerformed (ActionEvent e) {\n    dirChooser.setFileSelectionMode (JFileChooser.FILES_AND_DIRECTORIES);\n    int i = dirChooser.showOpenDialog (gimme ());\n    if (i == JFileChooser.APPROVE_OPTION) {\n        shoutcastPlayer.setText (dirChooser.getSelectedFile ().toString ());\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 9088423, "method2_id": 19912847, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 6442357, "method2_id": 14717100, "code1": "public static void zipFilesToZipFile (String dirPath, File file, ZipOutputStream zouts) {\n    FileInputStream fin = null;\n    ZipEntry entry = null;\n    byte [] buf = new byte [4096];\n    int readByte = 0;\n    if (file.isFile ()) {\n        try {\n            fin = new FileInputStream (file);\n            entry = new ZipEntry (getEntryName (dirPath, file));\n            zouts.putNextEntry (entry);\n            while ((readByte = fin.read (buf)) != - 1) {\n                zouts.write (buf, 0, readByte);\n            }\n            zouts.closeEntry ();\n            fin.close ();\n            System.out.println (\"\u6dfb\u52a0\u6587\u4ef6\" + file.getAbsolutePath () + \"\u5230zip\u6587\u4ef6\u4e2d!\");\n        } catch (Exception e) {\n            e.printStackTrace ();\n        }\n    }\n}\n", "code2": "public static void zipFilesToZipFile (String dirPath, File file, ZipOutputStream zouts) {\n    FileInputStream fin = null;\n    ZipEntry entry = null;\n    byte [] buf = new byte [4096];\n    int readByte = 0;\n    if (file.isFile ()) {\n        try {\n            fin = new FileInputStream (file);\n            entry = new ZipEntry (getEntryName (dirPath, file));\n            zouts.putNextEntry (entry);\n            while ((readByte = fin.read (buf)) != - 1) {\n                zouts.write (buf, 0, readByte);\n            }\n            zouts.closeEntry ();\n            fin.close ();\n            System.out.println (\"\ufffd\ufffd\ufffd\ufffd\u013c\ufffd\" + file.getAbsolutePath () + \"\ufffd\ufffdzip\ufffd\u013c\ufffd\ufffd\ufffd!\");\n        } catch (Exception e) {\n            e.printStackTrace ();\n        }\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 10445018, "method2_id": 19674840, "code1": "public String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n", "code2": "public String SHA1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n"}
{"clone_type": "T2", "method1_id": 17456565, "method2_id": 17456566, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1966262, "method2_id": 4518934, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1421557, "method2_id": 1458629, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 13783899, "method2_id": 14183083, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 411630, "method2_id": 16388708, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 6814854, "method2_id": 22246375, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2461169, "method2_id": 7760800, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 367771, "method2_id": 1421557, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2711644, "method2_id": 11319480, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 18269744, "method2_id": 19912848, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 12678589, "method2_id": 19912847, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1458628, "method2_id": 4518934, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 13028546, "method2_id": 18731110, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 13783898, "method2_id": 21488869, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 12614306, "method2_id": 21870536, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 6244937, "method2_id": 12172484, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 7760801, "method2_id": 8778961, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8778961, "method2_id": 18623183, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 8612647, "method2_id": 21870537, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 12614306, "method2_id": 14317425, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 18731109, "method2_id": 19142737, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 4623012, "method2_id": 22993368, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1966262, "method2_id": 22993368, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 607094, "method2_id": 3608108, "code1": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n", "code2": "public static String SHA512 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-512\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"UTF-8\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n"}
{"clone_type": "T2", "method1_id": 2532321, "method2_id": 4518934, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 13028546, "method2_id": 18623183, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 16351775, "method2_id": 18623183, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2141749, "method2_id": 4223265, "code1": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n", "code2": "public static String getMD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n"}
{"clone_type": "T2", "method1_id": 1421558, "method2_id": 12614305, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 5676, "method2_id": 91760, "code1": "public static void main (String [] args) {\n    final String dbdriver = \"org.postgresql.Driver\";\n    final String dbconnect = \"jdbc:postgresql://localhost:5432/wdb\";\n    final String dbuser = \"wcitest\";\n    final String dbpasswd = \"\";\n    Connection con = null;\n    Statement statement = null;\n    try {\n        Class.forName (dbdriver);\n        con = DriverManager.getConnection (dbconnect, dbuser, dbpasswd);\n        statement = con.createStatement ();\n    } catch (Exception e) {\n        System.out.println (\"FATAL: cant load the database driver <\" + dbdriver + \">!\");\n        System.exit (1);\n    }\n    String wdbInit = \"SELECT wci.begin('\" + dbuser + \"')\";\n    String sql = \" SELECT * \" + \" FROM wci.read( array['test wci 5'], NULL, \" + \"                '2009-11-13 00:00:00+00', \" + \"                NULL, \" + \"                array['air temperature', \" + \"                      'air pressure'], \" + \"                NULL, \" + \"                array[-1], \" + \"                NULL::wci.returngid )\";\n    final String colNames [] = {\"valueParameterName\", \"validTimeFrom\"};\n    ResultSet rs = null;\n    try {\n        statement.execute (wdbInit);\n        rs = statement.executeQuery (sql);\n        ResultSetMetaData rsMetaData = rs.getMetaData ();\n        String data;\n        boolean first;\n        while (rs.next ()) {\n            Statement getGridStatement = con.createStatement ();\n            first = true;\n            long gridId = rs.getLong (\"value\");\n            ResultSet blobResult = getGridStatement.executeQuery (\"SELECT * FROM wci.fetch(\" + gridId + \", NULL::wci.grid)\");\n            while (blobResult.next ()) {\n                int size = blobResult.getInt (\"numberX\") + blobResult.getInt (\"numberX\");\n                InputStream blob = blobResult.getBinaryStream (\"grid\");\n                DataInputStream blobReader = new DataInputStream (blob);\n                int floatToRead = 42;\n                blobReader.skip (floatToRead * 4);\n                float value = blobReader.readFloat ();\n                System.out.print (value + \"\\t\");\n                for (String name : colNames) {\n                    data = rs.getString (name);\n                    if (first) {\n                        first = false;\n                    } else {\n                        System.out.print (\", \");\n                    }\n                    if (data != null) System.out.print (data);\n                    else System.out.print (\"\\\\N\");\n\n                }\n                System.out.print (\"  (BLOB size: \" + size + \")\");\n                System.out.println ();\n            }\n            blobResult.close ();\n        }\n    } catch (Exception ex) {\n        System.out.println (\"SELECT error: \" + ex);\n    } finally {\n        try {\n            if (rs != null) rs.close ();\n\n        } catch (SQLException ex) {\n            System.out.println (\"EXCEPTION: rs.close: \" + ex);\n        }\n    }\n}\n", "code2": "public static void main (String [] args) {\n    final String dbdriver = \"org.postgresql.Driver\";\n    final String dbconnect = \"jdbc:postgresql://localhost:5432/wdb\";\n    final String dbuser = \"wcitest\";\n    final String dbpasswd = \"\";\n    Connection con = null;\n    Statement statement = null;\n    try {\n        Class.forName (dbdriver);\n        con = DriverManager.getConnection (dbconnect, dbuser, dbpasswd);\n        statement = con.createStatement ();\n    } catch (Exception e) {\n        System.out.println (\"FATAL: cant load the database driver <\" + dbdriver + \">!\");\n        System.exit (1);\n    }\n    String wdbInit = \"SELECT wci.begin('\" + dbuser + \"', 999, 999, 999 )\";\n    String sql = \" SELECT * \" + \" FROM wci.read( array['test wci 5'], NULL, \" + \"                '2009-11-13 00:00:00+00', \" + \"                NULL, \" + \"                array['air temperature', \" + \"                      'air pressure'], \" + \"                NULL, \" + \"                array[-1], \" + \"                NULL::wci.returngid )\";\n    final String colNames [] = {\"valueParameterName\", \"validTimeFrom\"};\n    ResultSet rs = null;\n    try {\n        statement.execute (wdbInit);\n        rs = statement.executeQuery (sql);\n        ResultSetMetaData rsMetaData = rs.getMetaData ();\n        String data;\n        boolean first;\n        while (rs.next ()) {\n            Statement getGridStatement = con.createStatement ();\n            first = true;\n            long gridId = rs.getLong (\"value\");\n            ResultSet blobResult = getGridStatement.executeQuery (\"SELECT * FROM wci.fetch(\" + gridId + \", NULL::wci.grid)\");\n            while (blobResult.next ()) {\n                int size = blobResult.getInt (\"numberX\") + blobResult.getInt (\"numberX\");\n                InputStream blob = blobResult.getBinaryStream (\"grid\");\n                DataInputStream blobReader = new DataInputStream (blob);\n                int floatToRead = 42;\n                blobReader.skip (floatToRead * 4);\n                float value = blobReader.readFloat ();\n                System.out.print (value + \"\\t\");\n                for (String name : colNames) {\n                    data = rs.getString (name);\n                    if (first) {\n                        first = false;\n                    } else {\n                        System.out.print (\", \");\n                    }\n                    if (data != null) System.out.print (data);\n                    else System.out.print (\"\\\\N\");\n\n                }\n                System.out.print (\"  (BLOB size: \" + size + \")\");\n                System.out.println ();\n            }\n            blobResult.close ();\n        }\n    } catch (Exception ex) {\n        System.out.println (\"SELECT error: \" + ex);\n    } finally {\n        try {\n            if (rs != null) rs.close ();\n\n        } catch (SQLException ex) {\n            System.out.println (\"EXCEPTION: rs.close: \" + ex);\n        }\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 6824301, "method2_id": 6824302, "code1": "public static int findUpperBoundarySNP (SNP s, ArrayList < SNP > variations) {\n    if (variations == null) {\n        return Integer.MAX_VALUE;\n    }\n    int top = 0;\n    int bot = variations.size ();\n    int mid = 0;\n    while (top < bot) {\n        mid = (top + bot) / 2;\n        if (s.compareTo (variations.get (mid)) < 0) {\n            bot = mid - 1;\n        } else if (s.compareTo (variations.get (mid)) > 0) {\n            top = mid + 1;\n        } else {\n            return mid;\n        }\n\n    }\n    return Utils.max2 (0, Utils.min2 (top, variations.size () - 1));\n}\n", "code2": "public static int findUpperBoundaryVariation (Variation var, ArrayList < Variation > variations) {\n    if (variations == null) {\n        return Integer.MAX_VALUE;\n    }\n    int top = 0;\n    int bot = variations.size ();\n    int mid = 0;\n    while (top < bot) {\n        mid = (top + bot) / 2;\n        if (var.compareTo (variations.get (mid)) < 0) {\n            bot = mid - 1;\n        } else if (var.compareTo (variations.get (mid)) > 0) {\n            top = mid + 1;\n        } else {\n            return mid;\n        }\n\n    }\n    return Utils.max2 (0, Utils.min2 (top, variations.size () - 1));\n}\n"}
{"clone_type": "T2", "method1_id": 1076874, "method2_id": 19236670, "code1": "private void lblHomepageMouseUp (MouseEvent evt) {\n    if (! java.awt.Desktop.isDesktopSupported ()) {\n        return;\n    }\n    java.awt.Desktop desktop = java.awt.Desktop.getDesktop ();\n    if (! desktop.isSupported (java.awt.Desktop.Action.BROWSE)) {\n        return;\n    }\n    try {\n        java.net.URI uri = new java.net.URI (this.lblHomepage.getText ());\n        desktop.browse (uri);\n    } catch (Exception e) {\n    }\n}\n", "code2": "private void labelHomepageMouseUp (MouseEvent evt) {\n    if (! java.awt.Desktop.isDesktopSupported ()) {\n        return;\n    }\n    java.awt.Desktop desktop = java.awt.Desktop.getDesktop ();\n    if (! desktop.isSupported (java.awt.Desktop.Action.BROWSE)) {\n        return;\n    }\n    try {\n        java.net.URI uri = new java.net.URI (this.labelHomepage.getText ());\n        desktop.browse (uri);\n    } catch (Exception e) {\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 411630, "method2_id": 18269745, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1884023, "method2_id": 15972030, "code1": "private void getRandomGUID (boolean secure) {\n    MessageDigest md5 = null;\n    StringBuffer sbValueBeforeMD5 = new StringBuffer ();\n    try {\n        md5 = MessageDigest.getInstance (\"MD5\");\n    } catch (NoSuchAlgorithmException e) {\n        System.out.println (\"Error: \" + e);\n    }\n    try {\n        long time = System.currentTimeMillis ();\n        long rand = 0;\n        if (secure) {\n            rand = mySecureRand.nextLong ();\n        } else {\n            rand = myRand.nextLong ();\n        }\n        sbValueBeforeMD5.append (s_id);\n        sbValueBeforeMD5.append (\":\");\n        sbValueBeforeMD5.append (Long.toString (time));\n        sbValueBeforeMD5.append (\":\");\n        sbValueBeforeMD5.append (Long.toString (rand));\n        valueBeforeMD5 = sbValueBeforeMD5.toString ();\n        md5.update (valueBeforeMD5.getBytes ());\n        byte [] array = md5.digest ();\n        StringBuffer sb = new StringBuffer ();\n        for (int j = 0;\n        j < array.length; ++ j) {\n            int b = array [j] & 0xFF;\n            if (b < 0x10) sb.append ('0');\n\n            sb.append (Integer.toHexString (b));\n        }\n        valueAfterMD5 = sb.toString ();\n    } catch (Exception e) {\n        System.out.println (\"Error:\" + e);\n    }\n}\n", "code2": "private void getGUID (boolean secure) {\n    MessageDigest md5 = null;\n    StringBuffer sbValueBeforeMD5 = new StringBuffer ();\n    try {\n        md5 = MessageDigest.getInstance (\"MD5\");\n    } catch (NoSuchAlgorithmException e) {\n        System.out.println (\"Error: \" + e);\n    }\n    try {\n        long time = System.currentTimeMillis ();\n        long rand = 0;\n        if (secure) {\n            rand = mySecureRand.nextLong ();\n        } else {\n            rand = myRand.nextLong ();\n        }\n        sbValueBeforeMD5.append (s_id);\n        sbValueBeforeMD5.append (\":\");\n        sbValueBeforeMD5.append (Long.toString (time));\n        sbValueBeforeMD5.append (\":\");\n        sbValueBeforeMD5.append (Long.toString (rand));\n        valueBeforeMD5 = sbValueBeforeMD5.toString ();\n        md5.update (valueBeforeMD5.getBytes ());\n        byte [] array = md5.digest ();\n        StringBuffer sb = new StringBuffer ();\n        for (int j = 0;\n        j < array.length; ++ j) {\n            int b = array [j] & 0xFF;\n            if (b < 0x10) sb.append ('0');\n\n            sb.append (Integer.toHexString (b));\n        }\n        valueAfterMD5 = sb.toString ();\n    } catch (Exception e) {\n        System.out.println (\"Error:\" + e);\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 14338365, "method2_id": 14548507, "code1": "private static String simpleCompute (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"utf-8\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n", "code2": "private static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n"}
{"clone_type": "T2", "method1_id": 11319479, "method2_id": 11548511, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 411631, "method2_id": 16351775, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 12614305, "method2_id": 16224018, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2532321, "method2_id": 21488869, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 13902980, "method2_id": 16224018, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1966262, "method2_id": 14317426, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 2575374, "method2_id": 6527977, "code1": "public static void copy (File in, File out) throws Exception {\n    FileChannel sourceChannel = new FileInputStream (in).getChannel ();\n    FileChannel destinationChannel = new FileOutputStream (out).getChannel ();\n    sourceChannel.transferTo (0, sourceChannel.size (), destinationChannel);\n    sourceChannel.close ();\n    destinationChannel.close ();\n}\n", "code2": "public static void copy (File in, File out) throws IOException {\n    FileChannel ic = new FileInputStream (in).getChannel ();\n    FileChannel oc = new FileOutputStream (out).getChannel ();\n    ic.transferTo (0, ic.size (), oc);\n    ic.close ();\n    oc.close ();\n}\n"}
{"clone_type": "T2", "method1_id": 6061402, "method2_id": 16466520, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 7132186, "method2_id": 16224017, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 12172484, "method2_id": 13028547, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1856896, "method2_id": 17732043, "code1": "private void colorizeEdit (StyledText edit) {\n    String findResult = edit.getText ();\n    final Color COLOR_BLUE = dialog.getDisplay ().getSystemColor (SWT.COLOR_BLUE);\n    int start = 0;\n    int index = findResult.indexOf (\"\\n\");\n    while (index != - 1) {\n        String subString = findResult.substring (start, index);\n        if (subString.length () != 0 && subString.startsWith (\"(\") && subString.endsWith (\")\")) {\n            StyleRange style = new StyleRange ();\n            style.start = start;\n            style.length = subString.length ();\n            style.underline = true;\n            ((StyledText) editResult).setStyleRange (style);\n        } else {\n            StyleRange style = new StyleRange ();\n            style.start = start;\n            style.length = subString.length ();\n            style.foreground = COLOR_BLUE;\n            ((StyledText) editResult).setStyleRange (style);\n        }\n        start = index + 1;\n        index = findResult.indexOf (\"\\n\", index + 1);\n    }\n    String subString = findResult.substring (start).replace (\"\\n\", \"\");\n    if (subString.length () != 0 && subString.startsWith (\"(\") && subString.endsWith (\")\")) {\n        StyleRange style = new StyleRange ();\n        style.start = start;\n        style.length = subString.length ();\n        style.underline = true;\n        ((StyledText) editResult).setStyleRange (style);\n    } else {\n        StyleRange style = new StyleRange ();\n        style.start = start;\n        style.length = subString.length ();\n        style.foreground = COLOR_BLUE;\n        ((StyledText) editResult).setStyleRange (style);\n    }\n    if (! WorkspaceSaveContainerGlobal.findCurrent.equals (\"\")) {\n        final Color COLOR_RED = dialog.getDisplay ().getSystemColor (SWT.COLOR_RED);\n        if (WorkspaceSaveContainerGlobal.regularExpression) {\n            Pattern pattern = null;\n            try {\n                if (WorkspaceSaveContainerGlobal.caseSensitive) pattern = Pattern.compile (WorkspaceSaveContainerGlobal.findCurrent);\n                else pattern = Pattern.compile (WorkspaceSaveContainerGlobal.findCurrent, Pattern.CASE_INSENSITIVE);\n\n            } catch (PatternSyntaxException e) {\n                return;\n            }\n            String [] findResultList = findResult.split (\"\\n\");\n            int findResultListCount = findResultList.length;\n            int findResultListIndex;\n            int offset = 0;\n            for (findResultListIndex = 0; findResultListIndex < findResultListCount; findResultListIndex ++) {\n                Matcher matcher = pattern.matcher (findResultList [findResultListIndex]);\n                while (matcher.find ()) {\n                    int startIndex = matcher.start ();\n                    int endIndex = matcher.end ();\n                    StyleRange style = new StyleRange ();\n                    style.start = startIndex + offset;\n                    style.length = endIndex - startIndex;\n                    style.fontStyle = SWT.BOLD;\n                    style.foreground = COLOR_RED;\n                    ((StyledText) editResult).setStyleRange (style);\n                }\n                offset += findResultList [findResultListIndex].length () + 1;\n            }\n        } else {\n            String findCurrentLowerCase = WorkspaceSaveContainerGlobal.findCurrent.toLowerCase ();\n            String findResultLowerCase = findResult.toLowerCase ();\n            if (WorkspaceSaveContainerGlobal.caseSensitive) index = findResult.indexOf (WorkspaceSaveContainerGlobal.findCurrent);\n            else index = findResultLowerCase.indexOf (findCurrentLowerCase);\n\n            while (index != - 1) {\n                StyleRange style = new StyleRange ();\n                style.start = index;\n                style.length = WorkspaceSaveContainerGlobal.findCurrent.length ();\n                style.fontStyle = SWT.BOLD;\n                style.foreground = COLOR_RED;\n                ((StyledText) editResult).setStyleRange (style);\n                if (WorkspaceSaveContainerGlobal.caseSensitive) index = findResult.indexOf (WorkspaceSaveContainerGlobal.findCurrent, index + 1);\n                else index = findResultLowerCase.indexOf (findCurrentLowerCase, index + 1);\n\n            }\n        }\n    }\n}\n", "code2": "private void colorizeEdit (StyledText edit) {\n    String findResult = edit.getText ();\n    final Color COLOR_BLUE = dialog.getDisplay ().getSystemColor (SWT.COLOR_BLUE);\n    int start = 0;\n    int index = findResult.indexOf (\"\\n\");\n    while (index != - 1) {\n        String subString = findResult.substring (start, index);\n        if (subString.length () != 0 && subString.startsWith (\"(\") && subString.endsWith (\")\")) {\n            StyleRange style = new StyleRange ();\n            style.start = start;\n            style.length = subString.length ();\n            style.underline = true;\n            ((StyledText) editResult).setStyleRange (style);\n        } else {\n            StyleRange style = new StyleRange ();\n            style.start = start;\n            style.length = subString.length ();\n            style.foreground = COLOR_BLUE;\n            ((StyledText) editResult).setStyleRange (style);\n        }\n        start = index + 1;\n        index = findResult.indexOf (\"\\n\", index + 1);\n    }\n    String subString = findResult.substring (start).replace (\"\\n\", \"\");\n    if (subString.length () != 0 && subString.startsWith (\"(\") && subString.endsWith (\")\")) {\n        StyleRange style = new StyleRange ();\n        style.start = start;\n        style.length = subString.length ();\n        style.underline = true;\n        ((StyledText) editResult).setStyleRange (style);\n    } else {\n        StyleRange style = new StyleRange ();\n        style.start = start;\n        style.length = subString.length ();\n        style.foreground = COLOR_BLUE;\n        ((StyledText) editResult).setStyleRange (style);\n    }\n    if (! WorkspaceSaveContainer.findCurrent.equals (\"\")) {\n        final Color COLOR_RED = dialog.getDisplay ().getSystemColor (SWT.COLOR_RED);\n        if (WorkspaceSaveContainer.regularExpression) {\n            Pattern pattern = null;\n            try {\n                if (WorkspaceSaveContainer.caseSensitive) pattern = Pattern.compile (WorkspaceSaveContainer.findCurrent);\n                else pattern = Pattern.compile (WorkspaceSaveContainer.findCurrent, Pattern.CASE_INSENSITIVE);\n\n            } catch (PatternSyntaxException e) {\n                return;\n            }\n            String [] findResultList = findResult.split (\"\\n\");\n            int findResultListCount = findResultList.length;\n            int findResultListIndex;\n            int offset = 0;\n            for (findResultListIndex = 0; findResultListIndex < findResultListCount; findResultListIndex ++) {\n                Matcher matcher = pattern.matcher (findResultList [findResultListIndex]);\n                while (matcher.find ()) {\n                    int startIndex = matcher.start ();\n                    int endIndex = matcher.end ();\n                    StyleRange style = new StyleRange ();\n                    style.start = startIndex + offset;\n                    style.length = endIndex - startIndex;\n                    style.fontStyle = SWT.BOLD;\n                    style.foreground = COLOR_RED;\n                    ((StyledText) editResult).setStyleRange (style);\n                }\n                offset += findResultList [findResultListIndex].length () + 1;\n            }\n        } else {\n            String findCurrentLowerCase = WorkspaceSaveContainer.findCurrent.toLowerCase ();\n            String findResultLowerCase = findResult.toLowerCase ();\n            if (WorkspaceSaveContainer.caseSensitive) index = findResult.indexOf (WorkspaceSaveContainer.findCurrent);\n            else index = findResultLowerCase.indexOf (findCurrentLowerCase);\n\n            while (index != - 1) {\n                StyleRange style = new StyleRange ();\n                style.start = index;\n                style.length = WorkspaceSaveContainer.findCurrent.length ();\n                style.fontStyle = SWT.BOLD;\n                style.foreground = COLOR_RED;\n                ((StyledText) editResult).setStyleRange (style);\n                if (WorkspaceSaveContainer.caseSensitive) index = findResult.indexOf (WorkspaceSaveContainer.findCurrent, index + 1);\n                else index = findResultLowerCase.indexOf (findCurrentLowerCase, index + 1);\n\n            }\n        }\n    }\n}\n"}
{"clone_type": "T2", "method1_id": 367770, "method2_id": 1458629, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 4938100, "method2_id": 8921716, "code1": "public static String sha1 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"SHA-1\");\n    byte [] sha1hash = new byte [40];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    sha1hash = md.digest ();\n    return convertToHex (sha1hash);\n}\n", "code2": "public static String MD5 (String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n    MessageDigest md;\n    md = MessageDigest.getInstance (\"MD5\");\n    byte [] md5hash = new byte [32];\n    md.update (text.getBytes (\"iso-8859-1\"), 0, text.length ());\n    md5hash = md.digest ();\n    return convertToHex (md5hash);\n}\n"}
{"clone_type": "T2", "method1_id": 10287987, "method2_id": 18623182, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 13902981, "method2_id": 19584877, "code1": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
{"clone_type": "T2", "method1_id": 1458628, "method2_id": 3768629, "code1": "public static boolean encodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.ENCODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n", "code2": "public static boolean decodeFileToFile (String infile, String outfile) {\n    boolean success = false;\n    java.io.InputStream in = null;\n    java.io.OutputStream out = null;\n    try {\n        in = new Base64.InputStream (new java.io.BufferedInputStream (new java.io.FileInputStream (infile)), Base64.DECODE);\n        out = new java.io.BufferedOutputStream (new java.io.FileOutputStream (outfile));\n        byte [] buffer = new byte [65536];\n        int read = - 1;\n        while ((read = in.read (buffer)) >= 0) {\n            out.write (buffer, 0, read);\n        }\n        success = true;\n    } catch (java.io.IOException exc) {\n        exc.printStackTrace ();\n    } finally {\n        try {\n            in.close ();\n        } catch (Exception exc) {\n        }\n        try {\n            out.close ();\n        } catch (Exception exc) {\n        }\n    }\n    return success;\n}\n"}
